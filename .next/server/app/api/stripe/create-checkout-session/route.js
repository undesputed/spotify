/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stripe/create-checkout-session/route";
exports.ids = ["app/api/stripe/create-checkout-session/route"];
exports.modules = {

/***/ "(rsc)/./app/api/stripe/create-checkout-session/route.ts":
/*!*********************************************************!*\
  !*** ./app/api/stripe/create-checkout-session/route.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_stripe_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/stripe-service */ \"(rsc)/./lib/services/stripe-service.ts\");\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase/server */ \"(rsc)/./lib/supabase/server.ts\");\n\n\n\nasync function POST(request) {\n    try {\n        const { tierId, billingCycle } = await request.json();\n        // Get user from session\n        const supabase = await (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_2__.createClient)();\n        const { data: { user }, error: authError } = await supabase.auth.getUser();\n        if (authError || !user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        // Validate input\n        if (!tierId || !billingCycle) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing required fields'\n            }, {\n                status: 400\n            });\n        }\n        if (![\n            'monthly',\n            'yearly'\n        ].includes(billingCycle)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid billing cycle'\n            }, {\n                status: 400\n            });\n        }\n        if (![\n            'premium',\n            'pro'\n        ].includes(tierId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid tier'\n            }, {\n                status: 400\n            });\n        }\n        // Create checkout session\n        const session = await _lib_services_stripe_service__WEBPACK_IMPORTED_MODULE_1__.stripeService.createCheckoutSession({\n            userId: user.id,\n            tierId,\n            billingCycle,\n            successUrl: `${request.nextUrl.origin}/checkout?success=true&session_id={CHECKOUT_SESSION_ID}`,\n            cancelUrl: `${request.nextUrl.origin}/checkout?canceled=true`\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            sessionId: session.id\n        });\n    } catch (error) {\n        console.error('Error creating checkout session:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to create checkout session'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3N0cmlwZS9jcmVhdGUtY2hlY2tvdXQtc2Vzc2lvbi9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBQ007QUFDVDtBQUU3QyxlQUFlRyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLE1BQU1GLFFBQVFHLElBQUk7UUFFbkQsd0JBQXdCO1FBQ3hCLE1BQU1DLFdBQVcsTUFBTU4sa0VBQVlBO1FBQ25DLE1BQU0sRUFBRU8sTUFBTSxFQUFFQyxJQUFJLEVBQUUsRUFBRUMsT0FBT0MsU0FBUyxFQUFFLEdBQUcsTUFBTUosU0FBU0ssSUFBSSxDQUFDQyxPQUFPO1FBRXhFLElBQUlGLGFBQWEsQ0FBQ0YsTUFBTTtZQUN0QixPQUFPVixxREFBWUEsQ0FBQ08sSUFBSSxDQUN0QjtnQkFBRUksT0FBTztZQUFlLEdBQ3hCO2dCQUFFSSxRQUFRO1lBQUk7UUFFbEI7UUFFQSxpQkFBaUI7UUFDakIsSUFBSSxDQUFDVixVQUFVLENBQUNDLGNBQWM7WUFDNUIsT0FBT04scURBQVlBLENBQUNPLElBQUksQ0FDdEI7Z0JBQUVJLE9BQU87WUFBMEIsR0FDbkM7Z0JBQUVJLFFBQVE7WUFBSTtRQUVsQjtRQUVBLElBQUksQ0FBQztZQUFDO1lBQVc7U0FBUyxDQUFDQyxRQUFRLENBQUNWLGVBQWU7WUFDakQsT0FBT04scURBQVlBLENBQUNPLElBQUksQ0FDdEI7Z0JBQUVJLE9BQU87WUFBd0IsR0FDakM7Z0JBQUVJLFFBQVE7WUFBSTtRQUVsQjtRQUVBLElBQUksQ0FBQztZQUFDO1lBQVc7U0FBTSxDQUFDQyxRQUFRLENBQUNYLFNBQVM7WUFDeEMsT0FBT0wscURBQVlBLENBQUNPLElBQUksQ0FDdEI7Z0JBQUVJLE9BQU87WUFBZSxHQUN4QjtnQkFBRUksUUFBUTtZQUFJO1FBRWxCO1FBRUEsMEJBQTBCO1FBQzFCLE1BQU1FLFVBQVUsTUFBTWhCLHVFQUFhQSxDQUFDaUIscUJBQXFCLENBQUM7WUFDeERDLFFBQVFULEtBQUtVLEVBQUU7WUFDZmY7WUFDQUM7WUFDQWUsWUFBWSxHQUFHakIsUUFBUWtCLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLHVEQUF1RCxDQUFDO1lBQzlGQyxXQUFXLEdBQUdwQixRQUFRa0IsT0FBTyxDQUFDQyxNQUFNLENBQUMsdUJBQXVCLENBQUM7UUFDL0Q7UUFFQSxPQUFPdkIscURBQVlBLENBQUNPLElBQUksQ0FBQztZQUFFa0IsV0FBV1IsUUFBUUcsRUFBRTtRQUFDO0lBQ25ELEVBQUUsT0FBT1QsT0FBTztRQUNkZSxRQUFRZixLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPWCxxREFBWUEsQ0FBQ08sSUFBSSxDQUN0QjtZQUFFSSxPQUFPO1FBQW9DLEdBQzdDO1lBQUVJLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvY2FycmlleXUvRGVza3RvcC9zcG90aWZ5L2FwcC9hcGkvc3RyaXBlL2NyZWF0ZS1jaGVja291dC1zZXNzaW9uL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IHN0cmlwZVNlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9zdHJpcGUtc2VydmljZSdcbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0AvbGliL3N1cGFiYXNlL3NlcnZlcidcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHRpZXJJZCwgYmlsbGluZ0N5Y2xlIH0gPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuXG4gICAgLy8gR2V0IHVzZXIgZnJvbSBzZXNzaW9uXG4gICAgY29uc3Qgc3VwYWJhc2UgPSBhd2FpdCBjcmVhdGVDbGllbnQoKVxuICAgIGNvbnN0IHsgZGF0YTogeyB1c2VyIH0sIGVycm9yOiBhdXRoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG5cbiAgICBpZiAoYXV0aEVycm9yIHx8ICF1c2VyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKVxuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIGlucHV0XG4gICAgaWYgKCF0aWVySWQgfHwgIWJpbGxpbmdDeWNsZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnTWlzc2luZyByZXF1aXJlZCBmaWVsZHMnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKVxuICAgIH1cblxuICAgIGlmICghWydtb250aGx5JywgJ3llYXJseSddLmluY2x1ZGVzKGJpbGxpbmdDeWNsZSkpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0ludmFsaWQgYmlsbGluZyBjeWNsZScgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApXG4gICAgfVxuXG4gICAgaWYgKCFbJ3ByZW1pdW0nLCAncHJvJ10uaW5jbHVkZXModGllcklkKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnSW52YWxpZCB0aWVyJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICAvLyBDcmVhdGUgY2hlY2tvdXQgc2Vzc2lvblxuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBzdHJpcGVTZXJ2aWNlLmNyZWF0ZUNoZWNrb3V0U2Vzc2lvbih7XG4gICAgICB1c2VySWQ6IHVzZXIuaWQsXG4gICAgICB0aWVySWQsXG4gICAgICBiaWxsaW5nQ3ljbGUsXG4gICAgICBzdWNjZXNzVXJsOiBgJHtyZXF1ZXN0Lm5leHRVcmwub3JpZ2lufS9jaGVja291dD9zdWNjZXNzPXRydWUmc2Vzc2lvbl9pZD17Q0hFQ0tPVVRfU0VTU0lPTl9JRH1gLFxuICAgICAgY2FuY2VsVXJsOiBgJHtyZXF1ZXN0Lm5leHRVcmwub3JpZ2lufS9jaGVja291dD9jYW5jZWxlZD10cnVlYCxcbiAgICB9KVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc2Vzc2lvbklkOiBzZXNzaW9uLmlkIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgY2hlY2tvdXQgc2Vzc2lvbjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIGNyZWF0ZSBjaGVja291dCBzZXNzaW9uJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwic3RyaXBlU2VydmljZSIsImNyZWF0ZUNsaWVudCIsIlBPU1QiLCJyZXF1ZXN0IiwidGllcklkIiwiYmlsbGluZ0N5Y2xlIiwianNvbiIsInN1cGFiYXNlIiwiZGF0YSIsInVzZXIiLCJlcnJvciIsImF1dGhFcnJvciIsImF1dGgiLCJnZXRVc2VyIiwic3RhdHVzIiwiaW5jbHVkZXMiLCJzZXNzaW9uIiwiY3JlYXRlQ2hlY2tvdXRTZXNzaW9uIiwidXNlcklkIiwiaWQiLCJzdWNjZXNzVXJsIiwibmV4dFVybCIsIm9yaWdpbiIsImNhbmNlbFVybCIsInNlc3Npb25JZCIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/stripe/create-checkout-session/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/config/subscriptions.ts":
/*!*************************************!*\
  !*** ./lib/config/subscriptions.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_PLATFORMS: () => (/* binding */ AVAILABLE_PLATFORMS),\n/* harmony export */   SUBSCRIPTION_TIERS: () => (/* binding */ SUBSCRIPTION_TIERS),\n/* harmony export */   getAvailablePlatforms: () => (/* binding */ getAvailablePlatforms),\n/* harmony export */   getPlatformById: () => (/* binding */ getPlatformById),\n/* harmony export */   getSubscriptionTierById: () => (/* binding */ getSubscriptionTierById)\n/* harmony export */ });\nconst SUBSCRIPTION_TIERS = [\n    {\n        id: 'free',\n        name: 'Free',\n        price: 0,\n        billingCycle: 'monthly',\n        platformLimit: 1,\n        features: [\n            'Access to 1 music platform',\n            'Basic music discovery',\n            'Standard audio quality',\n            'Ad-supported experience'\n        ]\n    },\n    {\n        id: 'premium',\n        name: 'Premium',\n        price: 9.99,\n        billingCycle: 'monthly',\n        platformLimit: 3,\n        features: [\n            'Access to 3 music platforms',\n            'Advanced music discovery',\n            'High-quality audio',\n            'Ad-free experience',\n            'Offline downloads',\n            'Priority support'\n        ],\n        popular: true\n    },\n    {\n        id: 'pro',\n        name: 'Pro',\n        price: 19.99,\n        billingCycle: 'monthly',\n        platformLimit: 5,\n        features: [\n            'Access to 5 music platforms',\n            'Unlimited music discovery',\n            'Lossless audio quality',\n            'Ad-free experience',\n            'Unlimited offline downloads',\n            'Priority support',\n            'Early access to features',\n            'Custom playlists'\n        ]\n    }\n];\nconst AVAILABLE_PLATFORMS = [\n    {\n        id: 'spotify',\n        name: 'Spotify',\n        description: 'Access millions of songs, podcasts, and playlists from Spotify',\n        icon: '🎵',\n        color: '#1DB954',\n        features: [\n            'Access to Spotify library',\n            'Create and sync playlists',\n            'Discover new music',\n            'Follow artists and friends'\n        ],\n        isAvailable: true,\n        requiresAuth: true\n    },\n    {\n        id: 'youtube_music',\n        name: 'YouTube Music',\n        description: 'Stream music videos and audio from YouTube Music',\n        icon: '📺',\n        color: '#FF0000',\n        features: [\n            'Access to YouTube Music library',\n            'Music video streaming',\n            'Background audio playback',\n            'Personalized recommendations'\n        ],\n        isAvailable: true,\n        requiresAuth: true\n    },\n    {\n        id: 'apple_music',\n        name: 'Apple Music',\n        description: 'Stream over 100 million songs with Apple Music',\n        icon: '🍎',\n        color: '#FA243C',\n        features: [\n            'Access to Apple Music library',\n            'Spatial audio support',\n            'Lyrics and music videos',\n            'Radio stations'\n        ],\n        isAvailable: false,\n        requiresAuth: true\n    },\n    {\n        id: 'tidal',\n        name: 'Tidal',\n        description: 'High-fidelity music streaming with Tidal',\n        icon: '🌊',\n        color: '#000000',\n        features: [\n            'Lossless audio quality',\n            'Exclusive content',\n            'Music videos',\n            'Artist interviews'\n        ],\n        isAvailable: false,\n        requiresAuth: true\n    },\n    {\n        id: 'deezer',\n        name: 'Deezer',\n        description: 'Discover and stream music with Deezer',\n        icon: '🎧',\n        color: '#00C7F2',\n        features: [\n            'Access to Deezer library',\n            'Flow personalized music',\n            'Podcasts and radio',\n            'Offline listening'\n        ],\n        isAvailable: false,\n        requiresAuth: true\n    }\n];\nconst getPlatformById = (id)=>{\n    return AVAILABLE_PLATFORMS.find((platform)=>platform.id === id);\n};\nconst getAvailablePlatforms = ()=>{\n    return AVAILABLE_PLATFORMS.filter((platform)=>platform.isAvailable);\n};\nconst getSubscriptionTierById = (id)=>{\n    return SUBSCRIPTION_TIERS.find((tier)=>tier.id === id);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY29uZmlnL3N1YnNjcmlwdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFTyxNQUFNQSxxQkFBeUM7SUFDcEQ7UUFDRUMsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLE9BQU87UUFDUEMsY0FBYztRQUNkQyxlQUFlO1FBQ2ZDLFVBQVU7WUFDUjtZQUNBO1lBQ0E7WUFDQTtTQUNEO0lBQ0g7SUFDQTtRQUNFTCxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsT0FBTztRQUNQQyxjQUFjO1FBQ2RDLGVBQWU7UUFDZkMsVUFBVTtZQUNSO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFNBQVM7SUFDWDtJQUNBO1FBQ0VOLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLGNBQWM7UUFDZEMsZUFBZTtRQUNmQyxVQUFVO1lBQ1I7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO0lBQ0g7Q0FDRDtBQUVNLE1BQU1FLHNCQUFrQztJQUM3QztRQUNFUCxJQUFJO1FBQ0pDLE1BQU07UUFDTk8sYUFBYTtRQUNiQyxNQUFNO1FBQ05DLE9BQU87UUFDUEwsVUFBVTtZQUNSO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDRE0sYUFBYTtRQUNiQyxjQUFjO0lBQ2hCO0lBQ0E7UUFDRVosSUFBSTtRQUNKQyxNQUFNO1FBQ05PLGFBQWE7UUFDYkMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BMLFVBQVU7WUFDUjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RNLGFBQWE7UUFDYkMsY0FBYztJQUNoQjtJQUNBO1FBQ0VaLElBQUk7UUFDSkMsTUFBTTtRQUNOTyxhQUFhO1FBQ2JDLE1BQU07UUFDTkMsT0FBTztRQUNQTCxVQUFVO1lBQ1I7WUFDQTtZQUNBO1lBQ0E7U0FDRDtRQUNETSxhQUFhO1FBQ2JDLGNBQWM7SUFDaEI7SUFDQTtRQUNFWixJQUFJO1FBQ0pDLE1BQU07UUFDTk8sYUFBYTtRQUNiQyxNQUFNO1FBQ05DLE9BQU87UUFDUEwsVUFBVTtZQUNSO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDRE0sYUFBYTtRQUNiQyxjQUFjO0lBQ2hCO0lBQ0E7UUFDRVosSUFBSTtRQUNKQyxNQUFNO1FBQ05PLGFBQWE7UUFDYkMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BMLFVBQVU7WUFDUjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RNLGFBQWE7UUFDYkMsY0FBYztJQUNoQjtDQUNEO0FBRU0sTUFBTUMsa0JBQWtCLENBQUNiO0lBQzlCLE9BQU9PLG9CQUFvQk8sSUFBSSxDQUFDQyxDQUFBQSxXQUFZQSxTQUFTZixFQUFFLEtBQUtBO0FBQzlELEVBQUM7QUFFTSxNQUFNZ0Isd0JBQXdCO0lBQ25DLE9BQU9ULG9CQUFvQlUsTUFBTSxDQUFDRixDQUFBQSxXQUFZQSxTQUFTSixXQUFXO0FBQ3BFLEVBQUM7QUFFTSxNQUFNTywwQkFBMEIsQ0FBQ2xCO0lBQ3RDLE9BQU9ELG1CQUFtQmUsSUFBSSxDQUFDSyxDQUFBQSxPQUFRQSxLQUFLbkIsRUFBRSxLQUFLQTtBQUNyRCxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvY2FycmlleXUvRGVza3RvcC9zcG90aWZ5L2xpYi9jb25maWcvc3Vic2NyaXB0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJzY3JpcHRpb25UaWVyLCBQbGF0Zm9ybSB9IGZyb20gJ0AvbGliL3R5cGVzL3N1YnNjcmlwdGlvbidcblxuZXhwb3J0IGNvbnN0IFNVQlNDUklQVElPTl9USUVSUzogU3Vic2NyaXB0aW9uVGllcltdID0gW1xuICB7XG4gICAgaWQ6ICdmcmVlJyxcbiAgICBuYW1lOiAnRnJlZScsXG4gICAgcHJpY2U6IDAsXG4gICAgYmlsbGluZ0N5Y2xlOiAnbW9udGhseScsXG4gICAgcGxhdGZvcm1MaW1pdDogMSxcbiAgICBmZWF0dXJlczogW1xuICAgICAgJ0FjY2VzcyB0byAxIG11c2ljIHBsYXRmb3JtJyxcbiAgICAgICdCYXNpYyBtdXNpYyBkaXNjb3ZlcnknLFxuICAgICAgJ1N0YW5kYXJkIGF1ZGlvIHF1YWxpdHknLFxuICAgICAgJ0FkLXN1cHBvcnRlZCBleHBlcmllbmNlJ1xuICAgIF1cbiAgfSxcbiAge1xuICAgIGlkOiAncHJlbWl1bScsXG4gICAgbmFtZTogJ1ByZW1pdW0nLFxuICAgIHByaWNlOiA5Ljk5LFxuICAgIGJpbGxpbmdDeWNsZTogJ21vbnRobHknLFxuICAgIHBsYXRmb3JtTGltaXQ6IDMsXG4gICAgZmVhdHVyZXM6IFtcbiAgICAgICdBY2Nlc3MgdG8gMyBtdXNpYyBwbGF0Zm9ybXMnLFxuICAgICAgJ0FkdmFuY2VkIG11c2ljIGRpc2NvdmVyeScsXG4gICAgICAnSGlnaC1xdWFsaXR5IGF1ZGlvJyxcbiAgICAgICdBZC1mcmVlIGV4cGVyaWVuY2UnLFxuICAgICAgJ09mZmxpbmUgZG93bmxvYWRzJyxcbiAgICAgICdQcmlvcml0eSBzdXBwb3J0J1xuICAgIF0sXG4gICAgcG9wdWxhcjogdHJ1ZVxuICB9LFxuICB7XG4gICAgaWQ6ICdwcm8nLFxuICAgIG5hbWU6ICdQcm8nLFxuICAgIHByaWNlOiAxOS45OSxcbiAgICBiaWxsaW5nQ3ljbGU6ICdtb250aGx5JyxcbiAgICBwbGF0Zm9ybUxpbWl0OiA1LFxuICAgIGZlYXR1cmVzOiBbXG4gICAgICAnQWNjZXNzIHRvIDUgbXVzaWMgcGxhdGZvcm1zJyxcbiAgICAgICdVbmxpbWl0ZWQgbXVzaWMgZGlzY292ZXJ5JyxcbiAgICAgICdMb3NzbGVzcyBhdWRpbyBxdWFsaXR5JyxcbiAgICAgICdBZC1mcmVlIGV4cGVyaWVuY2UnLFxuICAgICAgJ1VubGltaXRlZCBvZmZsaW5lIGRvd25sb2FkcycsXG4gICAgICAnUHJpb3JpdHkgc3VwcG9ydCcsXG4gICAgICAnRWFybHkgYWNjZXNzIHRvIGZlYXR1cmVzJyxcbiAgICAgICdDdXN0b20gcGxheWxpc3RzJ1xuICAgIF1cbiAgfVxuXVxuXG5leHBvcnQgY29uc3QgQVZBSUxBQkxFX1BMQVRGT1JNUzogUGxhdGZvcm1bXSA9IFtcbiAge1xuICAgIGlkOiAnc3BvdGlmeScsXG4gICAgbmFtZTogJ1Nwb3RpZnknLFxuICAgIGRlc2NyaXB0aW9uOiAnQWNjZXNzIG1pbGxpb25zIG9mIHNvbmdzLCBwb2RjYXN0cywgYW5kIHBsYXlsaXN0cyBmcm9tIFNwb3RpZnknLFxuICAgIGljb246ICfwn461JyxcbiAgICBjb2xvcjogJyMxREI5NTQnLFxuICAgIGZlYXR1cmVzOiBbXG4gICAgICAnQWNjZXNzIHRvIFNwb3RpZnkgbGlicmFyeScsXG4gICAgICAnQ3JlYXRlIGFuZCBzeW5jIHBsYXlsaXN0cycsXG4gICAgICAnRGlzY292ZXIgbmV3IG11c2ljJyxcbiAgICAgICdGb2xsb3cgYXJ0aXN0cyBhbmQgZnJpZW5kcydcbiAgICBdLFxuICAgIGlzQXZhaWxhYmxlOiB0cnVlLFxuICAgIHJlcXVpcmVzQXV0aDogdHJ1ZVxuICB9LFxuICB7XG4gICAgaWQ6ICd5b3V0dWJlX211c2ljJyxcbiAgICBuYW1lOiAnWW91VHViZSBNdXNpYycsXG4gICAgZGVzY3JpcHRpb246ICdTdHJlYW0gbXVzaWMgdmlkZW9zIGFuZCBhdWRpbyBmcm9tIFlvdVR1YmUgTXVzaWMnLFxuICAgIGljb246ICfwn5O6JyxcbiAgICBjb2xvcjogJyNGRjAwMDAnLFxuICAgIGZlYXR1cmVzOiBbXG4gICAgICAnQWNjZXNzIHRvIFlvdVR1YmUgTXVzaWMgbGlicmFyeScsXG4gICAgICAnTXVzaWMgdmlkZW8gc3RyZWFtaW5nJyxcbiAgICAgICdCYWNrZ3JvdW5kIGF1ZGlvIHBsYXliYWNrJyxcbiAgICAgICdQZXJzb25hbGl6ZWQgcmVjb21tZW5kYXRpb25zJ1xuICAgIF0sXG4gICAgaXNBdmFpbGFibGU6IHRydWUsXG4gICAgcmVxdWlyZXNBdXRoOiB0cnVlXG4gIH0sXG4gIHtcbiAgICBpZDogJ2FwcGxlX211c2ljJyxcbiAgICBuYW1lOiAnQXBwbGUgTXVzaWMnLFxuICAgIGRlc2NyaXB0aW9uOiAnU3RyZWFtIG92ZXIgMTAwIG1pbGxpb24gc29uZ3Mgd2l0aCBBcHBsZSBNdXNpYycsXG4gICAgaWNvbjogJ/CfjY4nLFxuICAgIGNvbG9yOiAnI0ZBMjQzQycsXG4gICAgZmVhdHVyZXM6IFtcbiAgICAgICdBY2Nlc3MgdG8gQXBwbGUgTXVzaWMgbGlicmFyeScsXG4gICAgICAnU3BhdGlhbCBhdWRpbyBzdXBwb3J0JyxcbiAgICAgICdMeXJpY3MgYW5kIG11c2ljIHZpZGVvcycsXG4gICAgICAnUmFkaW8gc3RhdGlvbnMnXG4gICAgXSxcbiAgICBpc0F2YWlsYWJsZTogZmFsc2UsIC8vIENvbWluZyBzb29uXG4gICAgcmVxdWlyZXNBdXRoOiB0cnVlXG4gIH0sXG4gIHtcbiAgICBpZDogJ3RpZGFsJyxcbiAgICBuYW1lOiAnVGlkYWwnLFxuICAgIGRlc2NyaXB0aW9uOiAnSGlnaC1maWRlbGl0eSBtdXNpYyBzdHJlYW1pbmcgd2l0aCBUaWRhbCcsXG4gICAgaWNvbjogJ/CfjIonLFxuICAgIGNvbG9yOiAnIzAwMDAwMCcsXG4gICAgZmVhdHVyZXM6IFtcbiAgICAgICdMb3NzbGVzcyBhdWRpbyBxdWFsaXR5JyxcbiAgICAgICdFeGNsdXNpdmUgY29udGVudCcsXG4gICAgICAnTXVzaWMgdmlkZW9zJyxcbiAgICAgICdBcnRpc3QgaW50ZXJ2aWV3cydcbiAgICBdLFxuICAgIGlzQXZhaWxhYmxlOiBmYWxzZSwgLy8gQ29taW5nIHNvb25cbiAgICByZXF1aXJlc0F1dGg6IHRydWVcbiAgfSxcbiAge1xuICAgIGlkOiAnZGVlemVyJyxcbiAgICBuYW1lOiAnRGVlemVyJyxcbiAgICBkZXNjcmlwdGlvbjogJ0Rpc2NvdmVyIGFuZCBzdHJlYW0gbXVzaWMgd2l0aCBEZWV6ZXInLFxuICAgIGljb246ICfwn46nJyxcbiAgICBjb2xvcjogJyMwMEM3RjInLFxuICAgIGZlYXR1cmVzOiBbXG4gICAgICAnQWNjZXNzIHRvIERlZXplciBsaWJyYXJ5JyxcbiAgICAgICdGbG93IHBlcnNvbmFsaXplZCBtdXNpYycsXG4gICAgICAnUG9kY2FzdHMgYW5kIHJhZGlvJyxcbiAgICAgICdPZmZsaW5lIGxpc3RlbmluZydcbiAgICBdLFxuICAgIGlzQXZhaWxhYmxlOiBmYWxzZSwgLy8gQ29taW5nIHNvb25cbiAgICByZXF1aXJlc0F1dGg6IHRydWVcbiAgfVxuXVxuXG5leHBvcnQgY29uc3QgZ2V0UGxhdGZvcm1CeUlkID0gKGlkOiBzdHJpbmcpOiBQbGF0Zm9ybSB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBBVkFJTEFCTEVfUExBVEZPUk1TLmZpbmQocGxhdGZvcm0gPT4gcGxhdGZvcm0uaWQgPT09IGlkKVxufVxuXG5leHBvcnQgY29uc3QgZ2V0QXZhaWxhYmxlUGxhdGZvcm1zID0gKCk6IFBsYXRmb3JtW10gPT4ge1xuICByZXR1cm4gQVZBSUxBQkxFX1BMQVRGT1JNUy5maWx0ZXIocGxhdGZvcm0gPT4gcGxhdGZvcm0uaXNBdmFpbGFibGUpXG59XG5cbmV4cG9ydCBjb25zdCBnZXRTdWJzY3JpcHRpb25UaWVyQnlJZCA9IChpZDogc3RyaW5nKTogU3Vic2NyaXB0aW9uVGllciB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBTVUJTQ1JJUFRJT05fVElFUlMuZmluZCh0aWVyID0+IHRpZXIuaWQgPT09IGlkKVxufVxuIl0sIm5hbWVzIjpbIlNVQlNDUklQVElPTl9USUVSUyIsImlkIiwibmFtZSIsInByaWNlIiwiYmlsbGluZ0N5Y2xlIiwicGxhdGZvcm1MaW1pdCIsImZlYXR1cmVzIiwicG9wdWxhciIsIkFWQUlMQUJMRV9QTEFURk9STVMiLCJkZXNjcmlwdGlvbiIsImljb24iLCJjb2xvciIsImlzQXZhaWxhYmxlIiwicmVxdWlyZXNBdXRoIiwiZ2V0UGxhdGZvcm1CeUlkIiwiZmluZCIsInBsYXRmb3JtIiwiZ2V0QXZhaWxhYmxlUGxhdGZvcm1zIiwiZmlsdGVyIiwiZ2V0U3Vic2NyaXB0aW9uVGllckJ5SWQiLCJ0aWVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/config/subscriptions.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/stripe-service.ts":
/*!****************************************!*\
  !*** ./lib/services/stripe-service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripeService: () => (/* binding */ stripeService)\n/* harmony export */ });\n/* harmony import */ var _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/stripe/config */ \"(rsc)/./lib/stripe/config.ts\");\n/* harmony import */ var _subscription_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscription-service */ \"(rsc)/./lib/services/subscription-service.ts\");\n/* harmony import */ var _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase/service */ \"(rsc)/./lib/supabase/service.ts\");\n\n\n\nclass StripeService {\n    // Create a Stripe checkout session for subscription\n    async createCheckoutSession({ userId, tierId, billingCycle, successUrl, cancelUrl }) {\n        try {\n            // Get or create Stripe customer\n            const customer = await this.getOrCreateCustomer(userId);\n            // Get the appropriate price ID\n            const priceId = this.getPriceId(tierId, billingCycle);\n            if (!priceId) {\n                throw new Error('Invalid tier or billing cycle');\n            }\n            // Create checkout session\n            const session = await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.checkout.sessions.create({\n                customer: customer.id,\n                payment_method_types: [\n                    'card'\n                ],\n                line_items: [\n                    {\n                        price: priceId,\n                        quantity: 1\n                    }\n                ],\n                mode: 'subscription',\n                success_url: successUrl,\n                cancel_url: cancelUrl,\n                metadata: {\n                    userId,\n                    tierId,\n                    billingCycle\n                },\n                subscription_data: {\n                    metadata: {\n                        userId,\n                        tierId,\n                        billingCycle\n                    }\n                }\n            });\n            return session;\n        } catch (error) {\n            console.error('Error creating checkout session:', error);\n            throw error;\n        }\n    }\n    // Create a customer portal session for subscription management\n    async createPortalSession({ userId, returnUrl }) {\n        try {\n            const customer = await this.getOrCreateCustomer(userId);\n            const session = await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.billingPortal.sessions.create({\n                customer: customer.id,\n                return_url: returnUrl\n            });\n            return session;\n        } catch (error) {\n            console.error('Error creating portal session:', error);\n            throw error;\n        }\n    }\n    // Get or create a Stripe customer\n    async getOrCreateCustomer(userId) {\n        try {\n            // Check if customer already exists in our database\n            const { data: existingCustomer } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('stripe_customers').select('stripe_customer_id').eq('user_id', userId).single();\n            if (existingCustomer?.stripe_customer_id) {\n                // Return existing customer\n                return await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.customers.retrieve(existingCustomer.stripe_customer_id);\n            }\n            // Get user data from Supabase\n            const { data: user } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('users').select('email, name').eq('id', userId).single();\n            if (!user) {\n                throw new Error('User not found');\n            }\n            // Create new Stripe customer\n            const customer = await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.customers.create({\n                email: user.email,\n                name: user.name,\n                metadata: {\n                    userId\n                }\n            });\n            // Save customer ID to our database\n            await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('stripe_customers').insert({\n                user_id: userId,\n                stripe_customer_id: customer.id,\n                email: user.email\n            });\n            return customer;\n        } catch (error) {\n            console.error('Error getting or creating customer:', error);\n            throw error;\n        }\n    }\n    // Get price ID for tier and billing cycle\n    getPriceId(tierId, billingCycle) {\n        if (tierId === 'free') return null;\n        const tier = _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.STRIPE_PRODUCTS[tierId];\n        if (!tier) return null;\n        return tier[billingCycle];\n    }\n    // Handle webhook events\n    async handleWebhookEvent(event) {\n        try {\n            switch(event.type){\n                case 'customer.subscription.created':\n                case 'customer.subscription.updated':\n                    await this.handleSubscriptionChange(event.data.object);\n                    break;\n                case 'customer.subscription.deleted':\n                    await this.handleSubscriptionCancellation(event.data.object);\n                    break;\n                case 'invoice.payment_succeeded':\n                    await this.handlePaymentSucceeded(event.data.object);\n                    break;\n                case 'invoice.payment_failed':\n                    await this.handlePaymentFailed(event.data.object);\n                    break;\n                default:\n                    console.log(`Unhandled event type: ${event.type}`);\n            }\n        } catch (error) {\n            console.error('Error handling webhook event:', error);\n            throw error;\n        }\n    }\n    // Handle subscription creation/update\n    async handleSubscriptionChange(subscription) {\n        const userId = subscription.metadata?.userId;\n        const tierId = subscription.metadata?.tierId;\n        const billingCycle = subscription.metadata?.billingCycle;\n        if (!userId || !tierId) {\n            console.error('Missing metadata in subscription:', subscription);\n            return;\n        }\n        // Update or create subscription in our database\n        await _subscription_service__WEBPACK_IMPORTED_MODULE_1__.subscriptionService.createSubscription(userId, tierId);\n        // Update subscription with Stripe data\n        await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n            stripe_subscription_id: subscription.id,\n            stripe_price_id: subscription.items.data[0]?.price.id,\n            billing_cycle: billingCycle,\n            next_billing_date: new Date(subscription.current_period_end * 1000).toISOString(),\n            cancel_at_period_end: subscription.cancel_at_period_end\n        }).eq('user_id', userId);\n    }\n    // Handle subscription cancellation\n    async handleSubscriptionCancellation(subscription) {\n        const userId = subscription.metadata?.userId;\n        if (!userId) {\n            console.error('Missing userId in subscription cancellation:', subscription);\n            return;\n        }\n        // Update subscription status in our database\n        await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n            status: 'cancelled',\n            end_date: new Date(subscription.canceled_at * 1000).toISOString()\n        }).eq('user_id', userId);\n    }\n    // Handle successful payment\n    async handlePaymentSucceeded(invoice) {\n        const subscription = invoice.subscription;\n        if (!subscription) return;\n        const userId = subscription.metadata?.userId;\n        if (!userId) return;\n        // Update subscription status if needed\n        await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n            status: 'active',\n            next_billing_date: new Date(subscription.current_period_end * 1000).toISOString()\n        }).eq('user_id', userId);\n    }\n    // Handle failed payment\n    async handlePaymentFailed(invoice) {\n        const subscription = invoice.subscription;\n        if (!subscription) return;\n        const userId = subscription.metadata?.userId;\n        if (!userId) return;\n        // Update subscription status\n        await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n            status: 'past_due'\n        }).eq('user_id', userId);\n    }\n    // Cancel subscription at period end\n    async cancelSubscription(userId) {\n        try {\n            const { data: subscription } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').select('stripe_subscription_id').eq('user_id', userId).single();\n            if (!subscription?.stripe_subscription_id) {\n                throw new Error('No active subscription found');\n            }\n            await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.subscriptions.update(subscription.stripe_subscription_id, {\n                cancel_at_period_end: true\n            });\n            // Update our database\n            await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n                cancel_at_period_end: true\n            }).eq('user_id', userId);\n            return true;\n        } catch (error) {\n            console.error('Error canceling subscription:', error);\n            throw error;\n        }\n    }\n    // Reactivate subscription\n    async reactivateSubscription(userId) {\n        try {\n            const { data: subscription } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').select('stripe_subscription_id').eq('user_id', userId).single();\n            if (!subscription?.stripe_subscription_id) {\n                throw new Error('No subscription found');\n            }\n            await _lib_stripe_config__WEBPACK_IMPORTED_MODULE_0__.stripe.subscriptions.update(subscription.stripe_subscription_id, {\n                cancel_at_period_end: false\n            });\n            // Update our database\n            await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_2__.supabaseService.supabase.from('user_subscriptions').update({\n                cancel_at_period_end: false\n            }).eq('user_id', userId);\n            return true;\n        } catch (error) {\n            console.error('Error reactivating subscription:', error);\n            throw error;\n        }\n    }\n}\nconst stripeService = new StripeService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/stripe-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/subscription-service.ts":
/*!**********************************************!*\
  !*** ./lib/services/subscription-service.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   subscriptionService: () => (/* binding */ subscriptionService)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase/service */ \"(rsc)/./lib/supabase/service.ts\");\n/* harmony import */ var _lib_config_subscriptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/config/subscriptions */ \"(rsc)/./lib/config/subscriptions.ts\");\n\n\nclass SubscriptionService {\n    // Get user's current subscription\n    async getUserSubscription(userId) {\n        try {\n            const { data, error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('user_subscriptions').select('*').eq('user_id', userId).eq('status', 'active').single();\n            if (error) {\n                console.error('Error fetching user subscription:', error);\n                return null;\n            }\n            return data;\n        } catch (error) {\n            console.error('Error in getUserSubscription:', error);\n            return null;\n        }\n    }\n    // Create or update user subscription\n    async createSubscription(userId, tierId) {\n        try {\n            const tier = (0,_lib_config_subscriptions__WEBPACK_IMPORTED_MODULE_1__.getSubscriptionTierById)(tierId);\n            if (!tier) {\n                throw new Error('Invalid subscription tier');\n            }\n            const subscription = {\n                user_id: userId,\n                tier_id: tierId,\n                status: 'active',\n                start_date: new Date().toISOString(),\n                platform_limit: tier.platformLimit,\n                connected_platforms: []\n            };\n            const { data, error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('user_subscriptions').upsert(subscription, {\n                onConflict: 'user_id'\n            }).select().single();\n            if (error) {\n                console.error('Error creating subscription:', error);\n                return null;\n            }\n            return data;\n        } catch (error) {\n            console.error('Error in createSubscription:', error);\n            return null;\n        }\n    }\n    // Get user's platform connections\n    async getUserPlatformConnections(userId) {\n        try {\n            const { data, error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('platform_connections').select('*').eq('user_id', userId);\n            if (error) {\n                console.error('Error fetching platform connections:', error);\n                return [];\n            }\n            return data || [];\n        } catch (error) {\n            console.error('Error in getUserPlatformConnections:', error);\n            return [];\n        }\n    }\n    // Connect a platform for a user\n    async connectPlatform(userId, platformId, metadata) {\n        try {\n            const connection = {\n                user_id: userId,\n                platform_id: platformId,\n                status: 'connected',\n                connected_at: new Date().toISOString(),\n                metadata\n            };\n            const { data, error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('platform_connections').upsert(connection, {\n                onConflict: 'user_id,platform_id'\n            }).select().single();\n            if (error) {\n                console.error('Error connecting platform:', error);\n                return null;\n            }\n            return data;\n        } catch (error) {\n            console.error('Error in connectPlatform:', error);\n            return null;\n        }\n    }\n    // Disconnect a platform for a user\n    async disconnectPlatform(userId, platformId) {\n        try {\n            const { error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('platform_connections').update({\n                status: 'disconnected',\n                disconnected_at: new Date().toISOString()\n            }).eq('user_id', userId).eq('platform_id', platformId);\n            if (error) {\n                console.error('Error disconnecting platform:', error);\n                return false;\n            }\n            return true;\n        } catch (error) {\n            console.error('Error in disconnectPlatform:', error);\n            return false;\n        }\n    }\n    // Check if user can connect more platforms\n    async canConnectPlatform(userId) {\n        try {\n            const subscription = await this.getUserSubscription(userId);\n            const connections = await this.getUserPlatformConnections(userId);\n            const connectedCount = connections.filter((c)=>c.status === 'connected').length;\n            const limit = subscription?.platform_limit || _lib_config_subscriptions__WEBPACK_IMPORTED_MODULE_1__.SUBSCRIPTION_TIERS[0].platformLimit;\n            return {\n                canConnect: connectedCount < limit,\n                currentCount: connectedCount,\n                limit\n            };\n        } catch (error) {\n            console.error('Error in canConnectPlatform:', error);\n            return {\n                canConnect: false,\n                currentCount: 0,\n                limit: 1\n            };\n        }\n    }\n    // Get user's subscription tier info\n    async getUserTierInfo(userId) {\n        try {\n            const subscription = await this.getUserSubscription(userId);\n            const connections = await this.getUserPlatformConnections(userId);\n            if (!subscription) {\n                return {\n                    tier: _lib_config_subscriptions__WEBPACK_IMPORTED_MODULE_1__.SUBSCRIPTION_TIERS[0],\n                    connections: []\n                };\n            }\n            const tier = (0,_lib_config_subscriptions__WEBPACK_IMPORTED_MODULE_1__.getSubscriptionTierById)(subscription.tier_id);\n            if (!tier) {\n                return null;\n            }\n            return {\n                tier,\n                connections\n            };\n        } catch (error) {\n            console.error('Error in getUserTierInfo:', error);\n            return null;\n        }\n    }\n    // Update user's platform selection\n    async updateUserPlatforms(userId, platformIds) {\n        try {\n            const { error } = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.supabase.from('users').update({\n                platforms: platformIds\n            }).eq('id', userId);\n            if (error) {\n                console.error('Error updating user platforms:', error);\n                return false;\n            }\n            return true;\n        } catch (error) {\n            console.error('Error in updateUserPlatforms:', error);\n            return false;\n        }\n    }\n}\nconst subscriptionService = new SubscriptionService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/subscription-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/stripe/config.ts":
/*!******************************!*\
  !*** ./lib/stripe/config.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STRIPE_PRODUCTS: () => (/* binding */ STRIPE_PRODUCTS),\n/* harmony export */   STRIPE_PUBLISHABLE_KEY: () => (/* binding */ STRIPE_PUBLISHABLE_KEY),\n/* harmony export */   STRIPE_WEBHOOK_EVENTS: () => (/* binding */ STRIPE_WEBHOOK_EVENTS),\n/* harmony export */   SUBSCRIPTION_STATUS_MAP: () => (/* binding */ SUBSCRIPTION_STATUS_MAP),\n/* harmony export */   stripe: () => (/* binding */ stripe)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"(rsc)/./node_modules/stripe/esm/stripe.esm.node.js\");\n\n// Initialize Stripe with secret key\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](process.env.STRIPE_SECRET_KEY, {\n    apiVersion: '2024-12-18.acacia'\n});\n// Stripe publishable key for client-side\nconst STRIPE_PUBLISHABLE_KEY = \"pk_test_51RyU0AJndqOavrDA2vAfy6QcpYKtQE98qH9d8Q5HZiZviySPsHKKEKX08nSZ6HsPvpEQGx0ty3ZLAOop6yqjmzty00fNkXjGWZ\";\n// Product and price IDs for different subscription tiers\nconst STRIPE_PRODUCTS = {\n    premium: {\n        monthly: process.env.STRIPE_PREMIUM_MONTHLY_PRICE_ID,\n        yearly: process.env.STRIPE_PREMIUM_YEARLY_PRICE_ID\n    },\n    pro: {\n        monthly: process.env.STRIPE_PRO_MONTHLY_PRICE_ID,\n        yearly: process.env.STRIPE_PRO_YEARLY_PRICE_ID\n    }\n};\n// Webhook events to handle\nconst STRIPE_WEBHOOK_EVENTS = {\n    CUSTOMER_SUBSCRIPTION_CREATED: 'customer.subscription.created',\n    CUSTOMER_SUBSCRIPTION_UPDATED: 'customer.subscription.updated',\n    CUSTOMER_SUBSCRIPTION_DELETED: 'customer.subscription.deleted',\n    INVOICE_PAYMENT_SUCCEEDED: 'invoice.payment_succeeded',\n    INVOICE_PAYMENT_FAILED: 'invoice.payment_failed'\n};\n// Subscription status mapping\nconst SUBSCRIPTION_STATUS_MAP = {\n    active: 'active',\n    canceled: 'cancelled',\n    incomplete: 'pending',\n    incomplete_expired: 'expired',\n    past_due: 'past_due',\n    trialing: 'trial',\n    unpaid: 'expired'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3RyaXBlL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkI7QUFFM0Isb0NBQW9DO0FBQzdCLE1BQU1DLFNBQVMsSUFBSUQsOENBQU1BLENBQUNFLFFBQVFDLEdBQUcsQ0FBQ0MsaUJBQWlCLEVBQUc7SUFDL0RDLFlBQVk7QUFDZCxHQUFFO0FBRUYseUNBQXlDO0FBQ2xDLE1BQU1DLHlCQUF5QkosNkdBQThDLENBQUM7QUFFckYseURBQXlEO0FBQ2xELE1BQU1NLGtCQUFrQjtJQUM3QkMsU0FBUztRQUNQQyxTQUFTUixRQUFRQyxHQUFHLENBQUNRLCtCQUErQjtRQUNwREMsUUFBUVYsUUFBUUMsR0FBRyxDQUFDVSw4QkFBOEI7SUFDcEQ7SUFDQUMsS0FBSztRQUNISixTQUFTUixRQUFRQyxHQUFHLENBQUNZLDJCQUEyQjtRQUNoREgsUUFBUVYsUUFBUUMsR0FBRyxDQUFDYSwwQkFBMEI7SUFDaEQ7QUFDRixFQUFVO0FBRVYsMkJBQTJCO0FBQ3BCLE1BQU1DLHdCQUF3QjtJQUNuQ0MsK0JBQStCO0lBQy9CQywrQkFBK0I7SUFDL0JDLCtCQUErQjtJQUMvQkMsMkJBQTJCO0lBQzNCQyx3QkFBd0I7QUFDMUIsRUFBVTtBQUVWLDhCQUE4QjtBQUN2QixNQUFNQywwQkFBMEI7SUFDckNDLFFBQVE7SUFDUkMsVUFBVTtJQUNWQyxZQUFZO0lBQ1pDLG9CQUFvQjtJQUNwQkMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLFFBQVE7QUFDVixFQUFVIiwic291cmNlcyI6WyIvVXNlcnMvY2FycmlleXUvRGVza3RvcC9zcG90aWZ5L2xpYi9zdHJpcGUvY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJpcGUgZnJvbSAnc3RyaXBlJ1xuXG4vLyBJbml0aWFsaXplIFN0cmlwZSB3aXRoIHNlY3JldCBrZXlcbmV4cG9ydCBjb25zdCBzdHJpcGUgPSBuZXcgU3RyaXBlKHByb2Nlc3MuZW52LlNUUklQRV9TRUNSRVRfS0VZISwge1xuICBhcGlWZXJzaW9uOiAnMjAyNC0xMi0xOC5hY2FjaWEnLFxufSlcblxuLy8gU3RyaXBlIHB1Ymxpc2hhYmxlIGtleSBmb3IgY2xpZW50LXNpZGVcbmV4cG9ydCBjb25zdCBTVFJJUEVfUFVCTElTSEFCTEVfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RSSVBFX1BVQkxJU0hBQkxFX0tFWSFcblxuLy8gUHJvZHVjdCBhbmQgcHJpY2UgSURzIGZvciBkaWZmZXJlbnQgc3Vic2NyaXB0aW9uIHRpZXJzXG5leHBvcnQgY29uc3QgU1RSSVBFX1BST0RVQ1RTID0ge1xuICBwcmVtaXVtOiB7XG4gICAgbW9udGhseTogcHJvY2Vzcy5lbnYuU1RSSVBFX1BSRU1JVU1fTU9OVEhMWV9QUklDRV9JRCEsXG4gICAgeWVhcmx5OiBwcm9jZXNzLmVudi5TVFJJUEVfUFJFTUlVTV9ZRUFSTFlfUFJJQ0VfSUQhLFxuICB9LFxuICBwcm86IHtcbiAgICBtb250aGx5OiBwcm9jZXNzLmVudi5TVFJJUEVfUFJPX01PTlRITFlfUFJJQ0VfSUQhLFxuICAgIHllYXJseTogcHJvY2Vzcy5lbnYuU1RSSVBFX1BST19ZRUFSTFlfUFJJQ0VfSUQhLFxuICB9LFxufSBhcyBjb25zdFxuXG4vLyBXZWJob29rIGV2ZW50cyB0byBoYW5kbGVcbmV4cG9ydCBjb25zdCBTVFJJUEVfV0VCSE9PS19FVkVOVFMgPSB7XG4gIENVU1RPTUVSX1NVQlNDUklQVElPTl9DUkVBVEVEOiAnY3VzdG9tZXIuc3Vic2NyaXB0aW9uLmNyZWF0ZWQnLFxuICBDVVNUT01FUl9TVUJTQ1JJUFRJT05fVVBEQVRFRDogJ2N1c3RvbWVyLnN1YnNjcmlwdGlvbi51cGRhdGVkJyxcbiAgQ1VTVE9NRVJfU1VCU0NSSVBUSU9OX0RFTEVURUQ6ICdjdXN0b21lci5zdWJzY3JpcHRpb24uZGVsZXRlZCcsXG4gIElOVk9JQ0VfUEFZTUVOVF9TVUNDRUVERUQ6ICdpbnZvaWNlLnBheW1lbnRfc3VjY2VlZGVkJyxcbiAgSU5WT0lDRV9QQVlNRU5UX0ZBSUxFRDogJ2ludm9pY2UucGF5bWVudF9mYWlsZWQnLFxufSBhcyBjb25zdFxuXG4vLyBTdWJzY3JpcHRpb24gc3RhdHVzIG1hcHBpbmdcbmV4cG9ydCBjb25zdCBTVUJTQ1JJUFRJT05fU1RBVFVTX01BUCA9IHtcbiAgYWN0aXZlOiAnYWN0aXZlJyxcbiAgY2FuY2VsZWQ6ICdjYW5jZWxsZWQnLFxuICBpbmNvbXBsZXRlOiAncGVuZGluZycsXG4gIGluY29tcGxldGVfZXhwaXJlZDogJ2V4cGlyZWQnLFxuICBwYXN0X2R1ZTogJ3Bhc3RfZHVlJyxcbiAgdHJpYWxpbmc6ICd0cmlhbCcsXG4gIHVucGFpZDogJ2V4cGlyZWQnLFxufSBhcyBjb25zdFxuIl0sIm5hbWVzIjpbIlN0cmlwZSIsInN0cmlwZSIsInByb2Nlc3MiLCJlbnYiLCJTVFJJUEVfU0VDUkVUX0tFWSIsImFwaVZlcnNpb24iLCJTVFJJUEVfUFVCTElTSEFCTEVfS0VZIiwiTkVYVF9QVUJMSUNfU1RSSVBFX1BVQkxJU0hBQkxFX0tFWSIsIlNUUklQRV9QUk9EVUNUUyIsInByZW1pdW0iLCJtb250aGx5IiwiU1RSSVBFX1BSRU1JVU1fTU9OVEhMWV9QUklDRV9JRCIsInllYXJseSIsIlNUUklQRV9QUkVNSVVNX1lFQVJMWV9QUklDRV9JRCIsInBybyIsIlNUUklQRV9QUk9fTU9OVEhMWV9QUklDRV9JRCIsIlNUUklQRV9QUk9fWUVBUkxZX1BSSUNFX0lEIiwiU1RSSVBFX1dFQkhPT0tfRVZFTlRTIiwiQ1VTVE9NRVJfU1VCU0NSSVBUSU9OX0NSRUFURUQiLCJDVVNUT01FUl9TVUJTQ1JJUFRJT05fVVBEQVRFRCIsIkNVU1RPTUVSX1NVQlNDUklQVElPTl9ERUxFVEVEIiwiSU5WT0lDRV9QQVlNRU5UX1NVQ0NFRURFRCIsIklOVk9JQ0VfUEFZTUVOVF9GQUlMRUQiLCJTVUJTQ1JJUFRJT05fU1RBVFVTX01BUCIsImFjdGl2ZSIsImNhbmNlbGVkIiwiaW5jb21wbGV0ZSIsImluY29tcGxldGVfZXhwaXJlZCIsInBhc3RfZHVlIiwidHJpYWxpbmciLCJ1bnBhaWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/stripe/config.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase/client.ts":
/*!********************************!*\
  !*** ./lib/supabase/client.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\nfunction createClient() {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(\"https://nvwrmmuyzxanjvsadtfh.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52d3JtbXV5enhhbmp2c2FkdGZoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MjgzNjQsImV4cCI6MjA3MTMwNDM2NH0.8k1x6zfO0KO9ExeDKcPP4FbaCA-BezxJWGHnNJ0VhQU\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBRTVDLFNBQVNDO0lBQ2QsT0FBT0Qsa0VBQW1CQSxDQUN4QkUsMENBQW9DLEVBQ3BDQSxrTkFBeUM7QUFFN0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYXJyaWV5dS9EZXNrdG9wL3Nwb3RpZnkvbGliL3N1cGFiYXNlL2NsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCcm93c2VyQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3NzcidcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsaWVudCgpIHtcbiAgcmV0dXJuIGNyZWF0ZUJyb3dzZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSFcbiAgKVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUJyb3dzZXJDbGllbnQiLCJjcmVhdGVDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase/server.ts":
/*!********************************!*\
  !*** ./lib/supabase/server.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\nasync function createClient() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://nvwrmmuyzxanjvsadtfh.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52d3JtbXV5enhhbmp2c2FkdGZoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MjgzNjQsImV4cCI6MjA3MTMwNDM2NH0.8k1x6zfO0KO9ExeDKcPP4FbaCA-BezxJWGHnNJ0VhQU\", {\n        cookies: {\n            getAll () {\n                return cookieStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>cookieStore.set(name, value, options));\n                } catch  {\n                // The `setAll` method was called from a Server Component.\n                // This can be ignored if you have middleware refreshing\n                // user sessions.\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2Uvc2VydmVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDtBQUNaO0FBRS9CLGVBQWVFO0lBQ3BCLE1BQU1DLGNBQWMsTUFBTUYscURBQU9BO0lBRWpDLE9BQU9ELGlFQUFrQkEsQ0FDdkJJLDBDQUFvQyxFQUNwQ0Esa05BQXlDLEVBQ3pDO1FBQ0VILFNBQVM7WUFDUE87Z0JBQ0UsT0FBT0wsWUFBWUssTUFBTTtZQUMzQjtZQUNBQyxRQUFPQyxZQUFZO2dCQUNqQixJQUFJO29CQUNGQSxhQUFhQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFLEdBQzVDWCxZQUFZWSxHQUFHLENBQUNILE1BQU1DLE9BQU9DO2dCQUVqQyxFQUFFLE9BQU07Z0JBQ04sMERBQTBEO2dCQUMxRCx3REFBd0Q7Z0JBQ3hELGlCQUFpQjtnQkFDbkI7WUFDRjtRQUNGO0lBQ0Y7QUFFSiIsInNvdXJjZXMiOlsiL1VzZXJzL2NhcnJpZXl1L0Rlc2t0b3Avc3BvdGlmeS9saWIvc3VwYWJhc2Uvc2VydmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InXG5pbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KCkge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKVxuXG4gIHJldHVybiBjcmVhdGVTZXJ2ZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXG4gICAge1xuICAgICAgY29va2llczoge1xuICAgICAgICBnZXRBbGwoKSB7XG4gICAgICAgICAgcmV0dXJuIGNvb2tpZVN0b3JlLmdldEFsbCgpXG4gICAgICAgIH0sXG4gICAgICAgIHNldEFsbChjb29raWVzVG9TZXQpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUsIG9wdGlvbnMgfSkgPT5cbiAgICAgICAgICAgICAgY29va2llU3RvcmUuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKVxuICAgICAgICAgICAgKVxuICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgLy8gVGhlIGBzZXRBbGxgIG1ldGhvZCB3YXMgY2FsbGVkIGZyb20gYSBTZXJ2ZXIgQ29tcG9uZW50LlxuICAgICAgICAgICAgLy8gVGhpcyBjYW4gYmUgaWdub3JlZCBpZiB5b3UgaGF2ZSBtaWRkbGV3YXJlIHJlZnJlc2hpbmdcbiAgICAgICAgICAgIC8vIHVzZXIgc2Vzc2lvbnMuXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJjb29raWVzIiwiY3JlYXRlQ2xpZW50IiwiY29va2llU3RvcmUiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwib3B0aW9ucyIsInNldCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase/server.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase/service.ts":
/*!*********************************!*\
  !*** ./lib/supabase/service.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseService: () => (/* binding */ SupabaseService),\n/* harmony export */   supabaseService: () => (/* binding */ supabaseService)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"(rsc)/./lib/supabase/client.ts\");\n\nclass SupabaseService {\n    // =====================================================\n    // USER OPERATIONS\n    // =====================================================\n    async getCurrentUser() {\n        const { data: { user } } = await this.supabase.auth.getUser();\n        if (!user) return null;\n        const { data, error } = await this.supabase.from('users').select('*').eq('id', user.id).single();\n        if (error) throw error;\n        return data;\n    }\n    async createUser(userData) {\n        const { data, error } = await this.supabase.from('users').insert(userData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateUser(userId, updates) {\n        const { data, error } = await this.supabase.from('users').update(updates).eq('id', userId).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // ARTIST OPERATIONS\n    // =====================================================\n    async getArtists(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('artists').select('*').order('name').range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getArtist(id) {\n        const { data, error } = await this.supabase.from('artists').select('*').eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async searchArtists(query, limit = 20) {\n        const { data, error } = await this.supabase.from('artists').select('*').ilike('name', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    async createArtist(artistData) {\n        const { data, error } = await this.supabase.from('artists').insert(artistData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // ALBUM OPERATIONS\n    // =====================================================\n    async getAlbums(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*)\n      `).order('release_date', {\n            ascending: false\n        }).range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getAlbum(id) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*),\n        tracks:tracks(*)\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async getAlbumsByArtist(artistId) {\n        const { data, error } = await this.supabase.from('albums').select('*').eq('artist_id', artistId).order('release_date', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async searchAlbums(query, limit = 20) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*)\n      `).ilike('title', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // TRACK OPERATIONS\n    // =====================================================\n    async getTracks(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*)\n      `).order('title').range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getTrack(id) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*),\n        track_services(*)\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async getTracksByAlbum(albumId) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*)\n      `).eq('album_id', albumId).order('track_number');\n        if (error) throw error;\n        return data;\n    }\n    async searchTracks(query, limit = 20) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*)\n      `).ilike('title', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    async createTrack(trackData) {\n        const { data, error } = await this.supabase.from('tracks').insert(trackData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getTrackServices(trackId) {\n        const { data, error } = await this.supabase.from('track_services').select('*').eq('track_id', trackId).eq('is_available', true);\n        if (error) throw error;\n        return data;\n    }\n    async addTrackService(trackServiceData) {\n        const { data, error } = await this.supabase.from('track_services').insert(trackServiceData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getBestStreamUrl(trackId, preferredQuality = 'high') {\n        const { data, error } = await this.supabase.from('track_services').select('stream_url, quality').eq('track_id', trackId).eq('is_available', true).order('quality', {\n            ascending: false\n        }).limit(1).single();\n        if (error) throw error;\n        return data?.stream_url || null;\n    }\n    // =====================================================\n    // PLAYLIST OPERATIONS\n    // =====================================================\n    async getPlaylists(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).eq('visibility', 'public').order('created_at', {\n            ascending: false\n        }).range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getUserPlaylists(userId) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).eq('creator_id', userId).order('updated_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async getPlaylist(id) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*),\n        playlist_tracks(\n          position,\n          track:tracks(\n            *,\n            artist:artists(*),\n            album:albums(*)\n          )\n        )\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async createPlaylist(playlistData) {\n        const { data, error } = await this.supabase.from('playlists').insert(playlistData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async addTrackToPlaylist(playlistId, trackId, position) {\n        // Get the next position if not provided\n        if (!position) {\n            const { data: maxPosition } = await this.supabase.from('playlist_tracks').select('position').eq('playlist_id', playlistId).order('position', {\n                ascending: false\n            }).limit(1).single();\n            position = (maxPosition?.position || 0) + 1;\n        }\n        const { error } = await this.supabase.from('playlist_tracks').insert({\n            playlist_id: playlistId,\n            track_id: trackId,\n            position,\n            added_by: (await this.getCurrentUser())?.id || null\n        });\n        if (error) throw error;\n    }\n    // =====================================================\n    // USER LIBRARY OPERATIONS\n    // =====================================================\n    async getUserLibrary(userId) {\n        const { data, error } = await this.supabase.from('user_library').select(`\n        *,\n        track:tracks(\n          *,\n          artist:artists(*),\n          album:albums(*)\n        ),\n        album:albums(\n          *,\n          artist:artists(*)\n        ),\n        artist:artists(*),\n        playlist:playlists(\n          *,\n          creator:users!creator_id(*)\n        )\n      `).eq('user_id', userId).order('added_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async addToLibrary(libraryItem) {\n        const { data, error } = await this.supabase.from('user_library').insert(libraryItem).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async removeFromLibrary(userId, itemId, itemType) {\n        const { error } = await this.supabase.from('user_library').delete().eq('user_id', userId).eq(`${itemType}_id`, itemId);\n        if (error) throw error;\n    }\n    // =====================================================\n    // PLAY HISTORY OPERATIONS\n    // =====================================================\n    async addPlayHistory(historyItem) {\n        const { data, error } = await this.supabase.from('user_play_history').insert(historyItem).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getUserPlayHistory(userId, limit = 50) {\n        const { data, error } = await this.supabase.from('user_play_history').select(`\n        *,\n        track:tracks(\n          *,\n          artist:artists(*),\n          album:albums(*)\n        )\n      `).eq('user_id', userId).order('played_at', {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // SERVICE CONNECTION OPERATIONS\n    // =====================================================\n    async getUserServices(userId) {\n        const { data, error } = await this.supabase.from('user_services').select('*').eq('user_id', userId).eq('is_active', true);\n        if (error) throw error;\n        return data;\n    }\n    async connectService(serviceData) {\n        const { data, error } = await this.supabase.from('user_services').upsert(serviceData, {\n            onConflict: 'user_id,service_id'\n        }).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async disconnectService(userId, serviceId) {\n        const { error } = await this.supabase.from('user_services').update({\n            is_active: false\n        }).eq('user_id', userId).eq('service_id', serviceId);\n        if (error) throw error;\n    }\n    // =====================================================\n    // SEARCH OPERATIONS\n    // =====================================================\n    async searchAll(query, limit = 20) {\n        const [tracks, albums, artists, playlists] = await Promise.all([\n            this.searchTracks(query, limit),\n            this.searchAlbums(query, limit),\n            this.searchArtists(query, limit),\n            this.searchPlaylists(query, limit)\n        ]);\n        return {\n            tracks,\n            albums,\n            artists,\n            playlists,\n            query,\n            total: tracks.length + albums.length + artists.length + playlists.length\n        };\n    }\n    async searchPlaylists(query, limit = 20) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).ilike('title', `%${query}%`).eq('visibility', 'public').limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    constructor(){\n        this.supabase = (0,_client__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n    }\n}\n// Export a singleton instance\nconst supabaseService = new SupabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWlCIiwic291cmNlcyI6WyIvVXNlcnMvY2FycmlleXUvRGVza3RvcC9zcG90aWZ5L2xpYi9zdXBhYmFzZS9zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJy4vY2xpZW50J1xuaW1wb3J0IHR5cGUgeyBEYXRhYmFzZSB9IGZyb20gJy4vdHlwZXMnXG5cbnR5cGUgVGFibGVzID0gRGF0YWJhc2VbJ3B1YmxpYyddWydUYWJsZXMnXVxudHlwZSBFbnVtcyA9IERhdGFiYXNlWydwdWJsaWMnXVsnRW51bXMnXVxuXG4vLyBUeXBlIGFsaWFzZXMgZm9yIGJldHRlciByZWFkYWJpbGl0eVxuZXhwb3J0IHR5cGUgVXNlciA9IFRhYmxlc1sndXNlcnMnXVsnUm93J11cbmV4cG9ydCB0eXBlIFVzZXJJbnNlcnQgPSBUYWJsZXNbJ3VzZXJzJ11bJ0luc2VydCddXG5leHBvcnQgdHlwZSBVc2VyVXBkYXRlID0gVGFibGVzWyd1c2VycyddWydVcGRhdGUnXVxuXG5leHBvcnQgdHlwZSBBcnRpc3QgPSBUYWJsZXNbJ2FydGlzdHMnXVsnUm93J11cbmV4cG9ydCB0eXBlIEFydGlzdEluc2VydCA9IFRhYmxlc1snYXJ0aXN0cyddWydJbnNlcnQnXVxuZXhwb3J0IHR5cGUgQXJ0aXN0VXBkYXRlID0gVGFibGVzWydhcnRpc3RzJ11bJ1VwZGF0ZSddXG5cbmV4cG9ydCB0eXBlIEFsYnVtID0gVGFibGVzWydhbGJ1bXMnXVsnUm93J11cbmV4cG9ydCB0eXBlIEFsYnVtSW5zZXJ0ID0gVGFibGVzWydhbGJ1bXMnXVsnSW5zZXJ0J11cbmV4cG9ydCB0eXBlIEFsYnVtVXBkYXRlID0gVGFibGVzWydhbGJ1bXMnXVsnVXBkYXRlJ11cblxuZXhwb3J0IHR5cGUgVHJhY2sgPSBUYWJsZXNbJ3RyYWNrcyddWydSb3cnXVxuZXhwb3J0IHR5cGUgVHJhY2tJbnNlcnQgPSBUYWJsZXNbJ3RyYWNrcyddWydJbnNlcnQnXVxuZXhwb3J0IHR5cGUgVHJhY2tVcGRhdGUgPSBUYWJsZXNbJ3RyYWNrcyddWydVcGRhdGUnXVxuXG5leHBvcnQgdHlwZSBUcmFja1NlcnZpY2UgPSBUYWJsZXNbJ3RyYWNrX3NlcnZpY2VzJ11bJ1JvdyddXG5leHBvcnQgdHlwZSBUcmFja1NlcnZpY2VJbnNlcnQgPSBUYWJsZXNbJ3RyYWNrX3NlcnZpY2VzJ11bJ0luc2VydCddXG5cbmV4cG9ydCB0eXBlIFBsYXlsaXN0ID0gVGFibGVzWydwbGF5bGlzdHMnXVsnUm93J11cbmV4cG9ydCB0eXBlIFBsYXlsaXN0SW5zZXJ0ID0gVGFibGVzWydwbGF5bGlzdHMnXVsnSW5zZXJ0J11cbmV4cG9ydCB0eXBlIFBsYXlsaXN0VXBkYXRlID0gVGFibGVzWydwbGF5bGlzdHMnXVsnVXBkYXRlJ11cblxuZXhwb3J0IHR5cGUgUGxheWxpc3RUcmFjayA9IFRhYmxlc1sncGxheWxpc3RfdHJhY2tzJ11bJ1JvdyddXG5leHBvcnQgdHlwZSBQbGF5bGlzdFRyYWNrSW5zZXJ0ID0gVGFibGVzWydwbGF5bGlzdF90cmFja3MnXVsnSW5zZXJ0J11cblxuZXhwb3J0IHR5cGUgVXNlckxpYnJhcnkgPSBUYWJsZXNbJ3VzZXJfbGlicmFyeSddWydSb3cnXVxuZXhwb3J0IHR5cGUgVXNlckxpYnJhcnlJbnNlcnQgPSBUYWJsZXNbJ3VzZXJfbGlicmFyeSddWydJbnNlcnQnXVxuXG5leHBvcnQgdHlwZSBVc2VyUGxheUhpc3RvcnkgPSBUYWJsZXNbJ3VzZXJfcGxheV9oaXN0b3J5J11bJ1JvdyddXG5leHBvcnQgdHlwZSBVc2VyUGxheUhpc3RvcnlJbnNlcnQgPSBUYWJsZXNbJ3VzZXJfcGxheV9oaXN0b3J5J11bJ0luc2VydCddXG5cbmV4cG9ydCB0eXBlIFVzZXJTZXJ2aWNlID0gVGFibGVzWyd1c2VyX3NlcnZpY2VzJ11bJ1JvdyddXG5leHBvcnQgdHlwZSBVc2VyU2VydmljZUluc2VydCA9IFRhYmxlc1sndXNlcl9zZXJ2aWNlcyddWydJbnNlcnQnXVxuZXhwb3J0IHR5cGUgVXNlclNlcnZpY2VVcGRhdGUgPSBUYWJsZXNbJ3VzZXJfc2VydmljZXMnXVsnVXBkYXRlJ11cblxuZXhwb3J0IHR5cGUgTXVzaWNTZXJ2aWNlID0gRW51bXNbJ211c2ljX3NlcnZpY2UnXVxuZXhwb3J0IHR5cGUgVHJhY2tRdWFsaXR5ID0gRW51bXNbJ3RyYWNrX3F1YWxpdHknXVxuZXhwb3J0IHR5cGUgQWxidW1UeXBlID0gRW51bXNbJ2FsYnVtX3R5cGUnXVxuZXhwb3J0IHR5cGUgUGxheWxpc3RWaXNpYmlsaXR5ID0gRW51bXNbJ3BsYXlsaXN0X3Zpc2liaWxpdHknXVxuZXhwb3J0IHR5cGUgU3Vic2NyaXB0aW9uVGllciA9IEVudW1zWydzdWJzY3JpcHRpb25fdGllciddXG5cbmV4cG9ydCBjbGFzcyBTdXBhYmFzZVNlcnZpY2Uge1xuICBwcml2YXRlIHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KClcblxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBVU0VSIE9QRVJBVElPTlNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBhc3luYyBnZXRDdXJyZW50VXNlcigpOiBQcm9taXNlPFVzZXIgfCBudWxsPiB7XG4gICAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZS5hdXRoLmdldFVzZXIoKVxuICAgIGlmICghdXNlcikgcmV0dXJuIG51bGxcblxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c2VycycpXG4gICAgICAuc2VsZWN0KCcqJylcbiAgICAgIC5lcSgnaWQnLCB1c2VyLmlkKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IFVzZXJJbnNlcnQpOiBQcm9taXNlPFVzZXI+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndXNlcnMnKVxuICAgICAgLmluc2VydCh1c2VyRGF0YSlcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZVVzZXIodXNlcklkOiBzdHJpbmcsIHVwZGF0ZXM6IFVzZXJVcGRhdGUpOiBQcm9taXNlPFVzZXI+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndXNlcnMnKVxuICAgICAgLnVwZGF0ZSh1cGRhdGVzKVxuICAgICAgLmVxKCdpZCcsIHVzZXJJZClcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEFSVElTVCBPUEVSQVRJT05TXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgYXN5bmMgZ2V0QXJ0aXN0cyhsaW1pdCA9IDUwLCBvZmZzZXQgPSAwKTogUHJvbWlzZTxBcnRpc3RbXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhcnRpc3RzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yZGVyKCduYW1lJylcbiAgICAgIC5yYW5nZShvZmZzZXQsIG9mZnNldCArIGxpbWl0IC0gMSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgZ2V0QXJ0aXN0KGlkOiBzdHJpbmcpOiBQcm9taXNlPEFydGlzdCB8IG51bGw+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgnYXJ0aXN0cycpXG4gICAgICAuc2VsZWN0KCcqJylcbiAgICAgIC5lcSgnaWQnLCBpZClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBzZWFyY2hBcnRpc3RzKHF1ZXJ5OiBzdHJpbmcsIGxpbWl0ID0gMjApOiBQcm9taXNlPEFydGlzdFtdPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ2FydGlzdHMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuaWxpa2UoJ25hbWUnLCBgJSR7cXVlcnl9JWApXG4gICAgICAubGltaXQobGltaXQpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZUFydGlzdChhcnRpc3REYXRhOiBBcnRpc3RJbnNlcnQpOiBQcm9taXNlPEFydGlzdD4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhcnRpc3RzJylcbiAgICAgIC5pbnNlcnQoYXJ0aXN0RGF0YSlcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEFMQlVNIE9QRVJBVElPTlNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBhc3luYyBnZXRBbGJ1bXMobGltaXQgPSA1MCwgb2Zmc2V0ID0gMCk6IFByb21pc2U8QWxidW1bXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhbGJ1bXMnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGFydGlzdDphcnRpc3RzKCopXG4gICAgICBgKVxuICAgICAgLm9yZGVyKCdyZWxlYXNlX2RhdGUnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAgIC5yYW5nZShvZmZzZXQsIG9mZnNldCArIGxpbWl0IC0gMSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgZ2V0QWxidW0oaWQ6IHN0cmluZyk6IFByb21pc2U8QWxidW0gfCBudWxsPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ2FsYnVtcycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgYXJ0aXN0OmFydGlzdHMoKiksXG4gICAgICAgIHRyYWNrczp0cmFja3MoKilcbiAgICAgIGApXG4gICAgICAuZXEoJ2lkJywgaWQpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgZ2V0QWxidW1zQnlBcnRpc3QoYXJ0aXN0SWQ6IHN0cmluZyk6IFByb21pc2U8QWxidW1bXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhbGJ1bXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ2FydGlzdF9pZCcsIGFydGlzdElkKVxuICAgICAgLm9yZGVyKCdyZWxlYXNlX2RhdGUnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgc2VhcmNoQWxidW1zKHF1ZXJ5OiBzdHJpbmcsIGxpbWl0ID0gMjApOiBQcm9taXNlPEFsYnVtW10+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgnYWxidW1zJylcbiAgICAgIC5zZWxlY3QoYFxuICAgICAgICAqLFxuICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKVxuICAgICAgYClcbiAgICAgIC5pbGlrZSgndGl0bGUnLCBgJSR7cXVlcnl9JWApXG4gICAgICAubGltaXQobGltaXQpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFRSQUNLIE9QRVJBVElPTlNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBhc3luYyBnZXRUcmFja3MobGltaXQgPSA1MCwgb2Zmc2V0ID0gMCk6IFByb21pc2U8VHJhY2tbXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd0cmFja3MnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGFydGlzdDphcnRpc3RzKCopLFxuICAgICAgICBhbGJ1bTphbGJ1bXMoKilcbiAgICAgIGApXG4gICAgICAub3JkZXIoJ3RpdGxlJylcbiAgICAgIC5yYW5nZShvZmZzZXQsIG9mZnNldCArIGxpbWl0IC0gMSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgZ2V0VHJhY2soaWQ6IHN0cmluZyk6IFByb21pc2U8VHJhY2sgfCBudWxsPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3RyYWNrcycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgYXJ0aXN0OmFydGlzdHMoKiksXG4gICAgICAgIGFsYnVtOmFsYnVtcygqKSxcbiAgICAgICAgdHJhY2tfc2VydmljZXMoKilcbiAgICAgIGApXG4gICAgICAuZXEoJ2lkJywgaWQpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgZ2V0VHJhY2tzQnlBbGJ1bShhbGJ1bUlkOiBzdHJpbmcpOiBQcm9taXNlPFRyYWNrW10+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndHJhY2tzJylcbiAgICAgIC5zZWxlY3QoYFxuICAgICAgICAqLFxuICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKVxuICAgICAgYClcbiAgICAgIC5lcSgnYWxidW1faWQnLCBhbGJ1bUlkKVxuICAgICAgLm9yZGVyKCd0cmFja19udW1iZXInKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBzZWFyY2hUcmFja3MocXVlcnk6IHN0cmluZywgbGltaXQgPSAyMCk6IFByb21pc2U8VHJhY2tbXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd0cmFja3MnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGFydGlzdDphcnRpc3RzKCopLFxuICAgICAgICBhbGJ1bTphbGJ1bXMoKilcbiAgICAgIGApXG4gICAgICAuaWxpa2UoJ3RpdGxlJywgYCUke3F1ZXJ5fSVgKVxuICAgICAgLmxpbWl0KGxpbWl0KVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBjcmVhdGVUcmFjayh0cmFja0RhdGE6IFRyYWNrSW5zZXJ0KTogUHJvbWlzZTxUcmFjaz4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd0cmFja3MnKVxuICAgICAgLmluc2VydCh0cmFja0RhdGEpXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBnZXRUcmFja1NlcnZpY2VzKHRyYWNrSWQ6IHN0cmluZyk6IFByb21pc2U8VHJhY2tTZXJ2aWNlW10+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndHJhY2tfc2VydmljZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ3RyYWNrX2lkJywgdHJhY2tJZClcbiAgICAgIC5lcSgnaXNfYXZhaWxhYmxlJywgdHJ1ZSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgYWRkVHJhY2tTZXJ2aWNlKHRyYWNrU2VydmljZURhdGE6IFRyYWNrU2VydmljZUluc2VydCk6IFByb21pc2U8VHJhY2tTZXJ2aWNlPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3RyYWNrX3NlcnZpY2VzJylcbiAgICAgIC5pbnNlcnQodHJhY2tTZXJ2aWNlRGF0YSlcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGdldEJlc3RTdHJlYW1VcmwodHJhY2tJZDogc3RyaW5nLCBwcmVmZXJyZWRRdWFsaXR5OiBUcmFja1F1YWxpdHkgPSAnaGlnaCcpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndHJhY2tfc2VydmljZXMnKVxuICAgICAgLnNlbGVjdCgnc3RyZWFtX3VybCwgcXVhbGl0eScpXG4gICAgICAuZXEoJ3RyYWNrX2lkJywgdHJhY2tJZClcbiAgICAgIC5lcSgnaXNfYXZhaWxhYmxlJywgdHJ1ZSlcbiAgICAgIC5vcmRlcigncXVhbGl0eScsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgICAgLmxpbWl0KDEpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YT8uc3RyZWFtX3VybCB8fCBudWxsXG4gIH1cblxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBQTEFZTElTVCBPUEVSQVRJT05TXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgYXN5bmMgZ2V0UGxheWxpc3RzKGxpbWl0ID0gNTAsIG9mZnNldCA9IDApOiBQcm9taXNlPFBsYXlsaXN0W10+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgncGxheWxpc3RzJylcbiAgICAgIC5zZWxlY3QoYFxuICAgICAgICAqLFxuICAgICAgICBjcmVhdG9yOnVzZXJzIWNyZWF0b3JfaWQoKilcbiAgICAgIGApXG4gICAgICAuZXEoJ3Zpc2liaWxpdHknLCAncHVibGljJylcbiAgICAgIC5vcmRlcignY3JlYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgICAgLnJhbmdlKG9mZnNldCwgb2Zmc2V0ICsgbGltaXQgLSAxKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBnZXRVc2VyUGxheWxpc3RzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxQbGF5bGlzdFtdPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3BsYXlsaXN0cycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgY3JlYXRvcjp1c2VycyFjcmVhdG9yX2lkKCopXG4gICAgICBgKVxuICAgICAgLmVxKCdjcmVhdG9yX2lkJywgdXNlcklkKVxuICAgICAgLm9yZGVyKCd1cGRhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGdldFBsYXlsaXN0KGlkOiBzdHJpbmcpOiBQcm9taXNlPFBsYXlsaXN0IHwgbnVsbD4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwbGF5bGlzdHMnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGNyZWF0b3I6dXNlcnMhY3JlYXRvcl9pZCgqKSxcbiAgICAgICAgcGxheWxpc3RfdHJhY2tzKFxuICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgIHRyYWNrOnRyYWNrcyhcbiAgICAgICAgICAgICosXG4gICAgICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKSxcbiAgICAgICAgICAgIGFsYnVtOmFsYnVtcygqKVxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgYClcbiAgICAgIC5lcSgnaWQnLCBpZClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBjcmVhdGVQbGF5bGlzdChwbGF5bGlzdERhdGE6IFBsYXlsaXN0SW5zZXJ0KTogUHJvbWlzZTxQbGF5bGlzdD4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwbGF5bGlzdHMnKVxuICAgICAgLmluc2VydChwbGF5bGlzdERhdGEpXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBhZGRUcmFja1RvUGxheWxpc3QocGxheWxpc3RJZDogc3RyaW5nLCB0cmFja0lkOiBzdHJpbmcsIHBvc2l0aW9uPzogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgLy8gR2V0IHRoZSBuZXh0IHBvc2l0aW9uIGlmIG5vdCBwcm92aWRlZFxuICAgIGlmICghcG9zaXRpb24pIHtcbiAgICAgIGNvbnN0IHsgZGF0YTogbWF4UG9zaXRpb24gfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3BsYXlsaXN0X3RyYWNrcycpXG4gICAgICAgIC5zZWxlY3QoJ3Bvc2l0aW9uJylcbiAgICAgICAgLmVxKCdwbGF5bGlzdF9pZCcsIHBsYXlsaXN0SWQpXG4gICAgICAgIC5vcmRlcigncG9zaXRpb24nLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAgICAgLmxpbWl0KDEpXG4gICAgICAgIC5zaW5nbGUoKVxuXG4gICAgICBwb3NpdGlvbiA9IChtYXhQb3NpdGlvbj8ucG9zaXRpb24gfHwgMCkgKyAxXG4gICAgfVxuXG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3BsYXlsaXN0X3RyYWNrcycpXG4gICAgICAuaW5zZXJ0KHtcbiAgICAgICAgcGxheWxpc3RfaWQ6IHBsYXlsaXN0SWQsXG4gICAgICAgIHRyYWNrX2lkOiB0cmFja0lkLFxuICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgYWRkZWRfYnk6IChhd2FpdCB0aGlzLmdldEN1cnJlbnRVc2VyKCkpPy5pZCB8fCBudWxsXG4gICAgICB9KVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICB9XG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gVVNFUiBMSUJSQVJZIE9QRVJBVElPTlNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBhc3luYyBnZXRVc2VyTGlicmFyeSh1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8VXNlckxpYnJhcnlbXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c2VyX2xpYnJhcnknKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIHRyYWNrOnRyYWNrcyhcbiAgICAgICAgICAqLFxuICAgICAgICAgIGFydGlzdDphcnRpc3RzKCopLFxuICAgICAgICAgIGFsYnVtOmFsYnVtcygqKVxuICAgICAgICApLFxuICAgICAgICBhbGJ1bTphbGJ1bXMoXG4gICAgICAgICAgKixcbiAgICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKVxuICAgICAgICApLFxuICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKSxcbiAgICAgICAgcGxheWxpc3Q6cGxheWxpc3RzKFxuICAgICAgICAgICosXG4gICAgICAgICAgY3JlYXRvcjp1c2VycyFjcmVhdG9yX2lkKCopXG4gICAgICAgIClcbiAgICAgIGApXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG4gICAgICAub3JkZXIoJ2FkZGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGFkZFRvTGlicmFyeShsaWJyYXJ5SXRlbTogVXNlckxpYnJhcnlJbnNlcnQpOiBQcm9taXNlPFVzZXJMaWJyYXJ5PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJfbGlicmFyeScpXG4gICAgICAuaW5zZXJ0KGxpYnJhcnlJdGVtKVxuICAgICAgLnNlbGVjdCgpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgcmVtb3ZlRnJvbUxpYnJhcnkodXNlcklkOiBzdHJpbmcsIGl0ZW1JZDogc3RyaW5nLCBpdGVtVHlwZTogJ3RyYWNrJyB8ICdhbGJ1bScgfCAnYXJ0aXN0JyB8ICdwbGF5bGlzdCcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndXNlcl9saWJyYXJ5JylcbiAgICAgIC5kZWxldGUoKVxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxuICAgICAgLmVxKGAke2l0ZW1UeXBlfV9pZGAsIGl0ZW1JZClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgfVxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFBMQVkgSElTVE9SWSBPUEVSQVRJT05TXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgYXN5bmMgYWRkUGxheUhpc3RvcnkoaGlzdG9yeUl0ZW06IFVzZXJQbGF5SGlzdG9yeUluc2VydCk6IFByb21pc2U8VXNlclBsYXlIaXN0b3J5PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJfcGxheV9oaXN0b3J5JylcbiAgICAgIC5pbnNlcnQoaGlzdG9yeUl0ZW0pXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBnZXRVc2VyUGxheUhpc3RvcnkodXNlcklkOiBzdHJpbmcsIGxpbWl0ID0gNTApOiBQcm9taXNlPFVzZXJQbGF5SGlzdG9yeVtdPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJfcGxheV9oaXN0b3J5JylcbiAgICAgIC5zZWxlY3QoYFxuICAgICAgICAqLFxuICAgICAgICB0cmFjazp0cmFja3MoXG4gICAgICAgICAgKixcbiAgICAgICAgICBhcnRpc3Q6YXJ0aXN0cygqKSxcbiAgICAgICAgICBhbGJ1bTphbGJ1bXMoKilcbiAgICAgICAgKVxuICAgICAgYClcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcbiAgICAgIC5vcmRlcigncGxheWVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG4gICAgICAubGltaXQobGltaXQpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIFNFUlZJQ0UgQ09OTkVDVElPTiBPUEVSQVRJT05TXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgYXN5bmMgZ2V0VXNlclNlcnZpY2VzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxVc2VyU2VydmljZVtdPiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJfc2VydmljZXMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG4gICAgICAuZXEoJ2lzX2FjdGl2ZScsIHRydWUpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGNvbm5lY3RTZXJ2aWNlKHNlcnZpY2VEYXRhOiBVc2VyU2VydmljZUluc2VydCk6IFByb21pc2U8VXNlclNlcnZpY2U+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndXNlcl9zZXJ2aWNlcycpXG4gICAgICAudXBzZXJ0KHNlcnZpY2VEYXRhLCB7IG9uQ29uZmxpY3Q6ICd1c2VyX2lkLHNlcnZpY2VfaWQnIH0pXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBkaXNjb25uZWN0U2VydmljZSh1c2VySWQ6IHN0cmluZywgc2VydmljZUlkOiBNdXNpY1NlcnZpY2UpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgndXNlcl9zZXJ2aWNlcycpXG4gICAgICAudXBkYXRlKHsgaXNfYWN0aXZlOiBmYWxzZSB9KVxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxuICAgICAgLmVxKCdzZXJ2aWNlX2lkJywgc2VydmljZUlkKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICB9XG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gU0VBUkNIIE9QRVJBVElPTlNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBhc3luYyBzZWFyY2hBbGwocXVlcnk6IHN0cmluZywgbGltaXQgPSAyMCkge1xuICAgIGNvbnN0IFt0cmFja3MsIGFsYnVtcywgYXJ0aXN0cywgcGxheWxpc3RzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIHRoaXMuc2VhcmNoVHJhY2tzKHF1ZXJ5LCBsaW1pdCksXG4gICAgICB0aGlzLnNlYXJjaEFsYnVtcyhxdWVyeSwgbGltaXQpLFxuICAgICAgdGhpcy5zZWFyY2hBcnRpc3RzKHF1ZXJ5LCBsaW1pdCksXG4gICAgICB0aGlzLnNlYXJjaFBsYXlsaXN0cyhxdWVyeSwgbGltaXQpXG4gICAgXSlcblxuICAgIHJldHVybiB7XG4gICAgICB0cmFja3MsXG4gICAgICBhbGJ1bXMsXG4gICAgICBhcnRpc3RzLFxuICAgICAgcGxheWxpc3RzLFxuICAgICAgcXVlcnksXG4gICAgICB0b3RhbDogdHJhY2tzLmxlbmd0aCArIGFsYnVtcy5sZW5ndGggKyBhcnRpc3RzLmxlbmd0aCArIHBsYXlsaXN0cy5sZW5ndGhcbiAgICB9XG4gIH1cblxuICBhc3luYyBzZWFyY2hQbGF5bGlzdHMocXVlcnk6IHN0cmluZywgbGltaXQgPSAyMCk6IFByb21pc2U8UGxheWxpc3RbXT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdwbGF5bGlzdHMnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGNyZWF0b3I6dXNlcnMhY3JlYXRvcl9pZCgqKVxuICAgICAgYClcbiAgICAgIC5pbGlrZSgndGl0bGUnLCBgJSR7cXVlcnl9JWApXG4gICAgICAuZXEoJ3Zpc2liaWxpdHknLCAncHVibGljJylcbiAgICAgIC5saW1pdChsaW1pdClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG59XG5cbi8vIEV4cG9ydCBhIHNpbmdsZXRvbiBpbnN0YW5jZVxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlU2VydmljZSA9IG5ldyBTdXBhYmFzZVNlcnZpY2UoKVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIlN1cGFiYXNlU2VydmljZSIsImdldEN1cnJlbnRVc2VyIiwiZGF0YSIsInVzZXIiLCJzdXBhYmFzZSIsImF1dGgiLCJnZXRVc2VyIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJpZCIsInNpbmdsZSIsImNyZWF0ZVVzZXIiLCJ1c2VyRGF0YSIsImluc2VydCIsInVwZGF0ZVVzZXIiLCJ1c2VySWQiLCJ1cGRhdGVzIiwidXBkYXRlIiwiZ2V0QXJ0aXN0cyIsImxpbWl0Iiwib2Zmc2V0Iiwib3JkZXIiLCJyYW5nZSIsImdldEFydGlzdCIsInNlYXJjaEFydGlzdHMiLCJxdWVyeSIsImlsaWtlIiwiY3JlYXRlQXJ0aXN0IiwiYXJ0aXN0RGF0YSIsImdldEFsYnVtcyIsImFzY2VuZGluZyIsImdldEFsYnVtIiwiZ2V0QWxidW1zQnlBcnRpc3QiLCJhcnRpc3RJZCIsInNlYXJjaEFsYnVtcyIsImdldFRyYWNrcyIsImdldFRyYWNrIiwiZ2V0VHJhY2tzQnlBbGJ1bSIsImFsYnVtSWQiLCJzZWFyY2hUcmFja3MiLCJjcmVhdGVUcmFjayIsInRyYWNrRGF0YSIsImdldFRyYWNrU2VydmljZXMiLCJ0cmFja0lkIiwiYWRkVHJhY2tTZXJ2aWNlIiwidHJhY2tTZXJ2aWNlRGF0YSIsImdldEJlc3RTdHJlYW1VcmwiLCJwcmVmZXJyZWRRdWFsaXR5Iiwic3RyZWFtX3VybCIsImdldFBsYXlsaXN0cyIsImdldFVzZXJQbGF5bGlzdHMiLCJnZXRQbGF5bGlzdCIsImNyZWF0ZVBsYXlsaXN0IiwicGxheWxpc3REYXRhIiwiYWRkVHJhY2tUb1BsYXlsaXN0IiwicGxheWxpc3RJZCIsInBvc2l0aW9uIiwibWF4UG9zaXRpb24iLCJwbGF5bGlzdF9pZCIsInRyYWNrX2lkIiwiYWRkZWRfYnkiLCJnZXRVc2VyTGlicmFyeSIsImFkZFRvTGlicmFyeSIsImxpYnJhcnlJdGVtIiwicmVtb3ZlRnJvbUxpYnJhcnkiLCJpdGVtSWQiLCJpdGVtVHlwZSIsImRlbGV0ZSIsImFkZFBsYXlIaXN0b3J5IiwiaGlzdG9yeUl0ZW0iLCJnZXRVc2VyUGxheUhpc3RvcnkiLCJnZXRVc2VyU2VydmljZXMiLCJjb25uZWN0U2VydmljZSIsInNlcnZpY2VEYXRhIiwidXBzZXJ0Iiwib25Db25mbGljdCIsImRpc2Nvbm5lY3RTZXJ2aWNlIiwic2VydmljZUlkIiwiaXNfYWN0aXZlIiwic2VhcmNoQWxsIiwidHJhY2tzIiwiYWxidW1zIiwiYXJ0aXN0cyIsInBsYXlsaXN0cyIsIlByb21pc2UiLCJhbGwiLCJzZWFyY2hQbGF5bGlzdHMiLCJ0b3RhbCIsImxlbmd0aCIsInN1cGFiYXNlU2VydmljZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase/service.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&page=%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&page=%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_carrieyu_Desktop_spotify_app_api_stripe_create_checkout_session_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/stripe/create-checkout-session/route.ts */ \"(rsc)/./app/api/stripe/create-checkout-session/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stripe/create-checkout-session/route\",\n        pathname: \"/api/stripe/create-checkout-session\",\n        filename: \"route\",\n        bundlePath: \"app/api/stripe/create-checkout-session/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/carrieyu/Desktop/spotify/app/api/stripe/create-checkout-session/route.ts\",\n    nextConfigOutput,\n    userland: _Users_carrieyu_Desktop_spotify_app_api_stripe_create_checkout_session_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/stripe/create-checkout-session/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&page=%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/stripe","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/qs","vendor-chunks/call-bind-apply-helpers","vendor-chunks/get-proto","vendor-chunks/object-inspect","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/side-channel","vendor-chunks/side-channel-weakmap","vendor-chunks/side-channel-map","vendor-chunks/side-channel-list","vendor-chunks/hasown","vendor-chunks/get-intrinsic","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/call-bound"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&page=%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcreate-checkout-session%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();