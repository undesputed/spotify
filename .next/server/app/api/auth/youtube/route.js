/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/youtube/route";
exports.ids = ["app/api/auth/youtube/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/youtube/route.ts":
/*!***************************************!*\
  !*** ./app/api/auth/youtube/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_youtube_music_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/youtube-music-service */ \"(rsc)/./lib/services/youtube-music-service.ts\");\n\n\nasync function GET(request) {\n    try {\n        const url = new URL(request.url);\n        const userId = url.searchParams.get('userId');\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'User ID is required'\n            }, {\n                status: 400\n            });\n        }\n        // Store userId in session or state for callback\n        const state = Buffer.from(JSON.stringify({\n            userId\n        })).toString('base64');\n        // Get YouTube authorization URL with state\n        const authUrl = _lib_services_youtube_music_service__WEBPACK_IMPORTED_MODULE_1__.youtubeMusicService.getAuthorizationUrl(state);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            authUrl,\n            state\n        });\n    } catch (error) {\n        console.error('YouTube auth error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to generate authorization URL'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgveW91dHViZS9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDbUI7QUFFbkUsZUFBZUUsSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU1DLE1BQU0sSUFBSUMsSUFBSUYsUUFBUUMsR0FBRztRQUMvQixNQUFNRSxTQUFTRixJQUFJRyxZQUFZLENBQUNDLEdBQUcsQ0FBQztRQUVwQyxJQUFJLENBQUNGLFFBQVE7WUFDWCxPQUFPTixxREFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUFzQixHQUMvQjtnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsZ0RBQWdEO1FBQ2hELE1BQU1DLFFBQVFDLE9BQU9DLElBQUksQ0FBQ0MsS0FBS0MsU0FBUyxDQUFDO1lBQUVWO1FBQU8sSUFBSVcsUUFBUSxDQUFDO1FBRS9ELDJDQUEyQztRQUMzQyxNQUFNQyxVQUFVakIsb0ZBQW1CQSxDQUFDa0IsbUJBQW1CLENBQUNQO1FBRXhELE9BQU9aLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7WUFDdkJTO1lBQ0FOO1FBQ0Y7SUFDRixFQUFFLE9BQU9GLE9BQU87UUFDZFUsUUFBUVYsS0FBSyxDQUFDLHVCQUF1QkE7UUFDckMsT0FBT1YscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRUMsT0FBTztRQUF1QyxHQUNoRDtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2NhcnJpZXl1L0Rlc2t0b3Avc3BvdGlmeS9hcHAvYXBpL2F1dGgveW91dHViZS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyB5b3V0dWJlTXVzaWNTZXJ2aWNlIH0gZnJvbSAnQC9saWIvc2VydmljZXMveW91dHViZS1tdXNpYy1zZXJ2aWNlJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybClcbiAgICBjb25zdCB1c2VySWQgPSB1cmwuc2VhcmNoUGFyYW1zLmdldCgndXNlcklkJylcbiAgICBcbiAgICBpZiAoIXVzZXJJZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnVXNlciBJRCBpcyByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApXG4gICAgfVxuXG4gICAgLy8gU3RvcmUgdXNlcklkIGluIHNlc3Npb24gb3Igc3RhdGUgZm9yIGNhbGxiYWNrXG4gICAgY29uc3Qgc3RhdGUgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeSh7IHVzZXJJZCB9KSkudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gICAgXG4gICAgLy8gR2V0IFlvdVR1YmUgYXV0aG9yaXphdGlvbiBVUkwgd2l0aCBzdGF0ZVxuICAgIGNvbnN0IGF1dGhVcmwgPSB5b3V0dWJlTXVzaWNTZXJ2aWNlLmdldEF1dGhvcml6YXRpb25Vcmwoc3RhdGUpXG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgXG4gICAgICBhdXRoVXJsLFxuICAgICAgc3RhdGUgXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdZb3VUdWJlIGF1dGggZXJyb3I6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBnZW5lcmF0ZSBhdXRob3JpemF0aW9uIFVSTCcgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgIClcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInlvdXR1YmVNdXNpY1NlcnZpY2UiLCJHRVQiLCJyZXF1ZXN0IiwidXJsIiwiVVJMIiwidXNlcklkIiwic2VhcmNoUGFyYW1zIiwiZ2V0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwic3RhdGUiLCJCdWZmZXIiLCJmcm9tIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwiYXV0aFVybCIsImdldEF1dGhvcml6YXRpb25VcmwiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/youtube/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/youtube-music-service.ts":
/*!***********************************************!*\
  !*** ./lib/services/youtube-music-service.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YouTubeMusicService: () => (/* binding */ YouTubeMusicService),\n/* harmony export */   youtubeMusicService: () => (/* binding */ youtubeMusicService)\n/* harmony export */ });\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! googleapis */ \"(rsc)/./node_modules/googleapis/build/src/index.js\");\n/* harmony import */ var _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase/service */ \"(rsc)/./lib/supabase/service.ts\");\n\n\nclass YouTubeMusicService {\n    constructor(){\n        this.accessToken = null;\n        this.refreshToken = null;\n        this.expiresAt = null;\n        this.oauth2Client = new googleapis__WEBPACK_IMPORTED_MODULE_1__.google.auth.OAuth2(process.env.YOUTUBE_CLIENT_ID, process.env.YOUTUBE_CLIENT_SECRET, `${\"https://3d686033c4c8.ngrok-free.app\"}/auth/youtube/callback`);\n        this.youtubeApi = googleapis__WEBPACK_IMPORTED_MODULE_1__.google.youtube('v3');\n    }\n    // Initialize with user tokens\n    async initialize(userId) {\n        try {\n            const userServices = await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.getUserServices(userId);\n            const youtubeService = userServices.find((s)=>s.service_id === 'youtube_music');\n            if (!youtubeService || !youtubeService.access_token) {\n                return false;\n            }\n            this.accessToken = youtubeService.access_token;\n            this.refreshToken = youtubeService.refresh_token;\n            this.expiresAt = youtubeService.expires_at ? new Date(youtubeService.expires_at).getTime() : null;\n            this.oauth2Client.setCredentials({\n                access_token: this.accessToken,\n                refresh_token: this.refreshToken,\n                expiry_date: this.expiresAt\n            });\n            // Refresh token if expired\n            if (this.expiresAt && Date.now() >= this.expiresAt) {\n                await this.refreshAccessToken(userId);\n            }\n            return true;\n        } catch (error) {\n            console.error('Failed to initialize YouTube Music service:', error);\n            return false;\n        }\n    }\n    // Refresh access token\n    async refreshAccessToken(userId) {\n        if (!this.refreshToken) throw new Error('No refresh token available');\n        try {\n            const { credentials } = await this.oauth2Client.refreshAccessToken();\n            this.accessToken = credentials.access_token;\n            this.expiresAt = credentials.expiry_date;\n            this.oauth2Client.setCredentials(credentials);\n            // Update tokens in database\n            await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.connectService({\n                user_id: userId,\n                service_id: 'youtube_music',\n                access_token: this.accessToken,\n                refresh_token: this.refreshToken,\n                expires_at: new Date(this.expiresAt).toISOString(),\n                is_active: true\n            });\n        } catch (error) {\n            console.error('Failed to refresh YouTube access token:', error);\n            throw error;\n        }\n    }\n    // Get authorization URL for OAuth\n    getAuthorizationUrl(state) {\n        const scopes = [\n            'https://www.googleapis.com/auth/youtube.readonly',\n            'https://www.googleapis.com/auth/youtube.force-ssl'\n        ];\n        return this.oauth2Client.generateAuthUrl({\n            access_type: 'offline',\n            scope: scopes,\n            state: state || 'state'\n        });\n    }\n    // Handle OAuth callback\n    async handleCallback(code, userId) {\n        try {\n            const { tokens } = await this.oauth2Client.getToken(code);\n            this.accessToken = tokens.access_token;\n            this.refreshToken = tokens.refresh_token;\n            this.expiresAt = tokens.expiry_date;\n            this.oauth2Client.setCredentials(tokens);\n            // Get user profile\n            const { data: profile } = await this.youtubeApi.channels.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet'\n                ],\n                mine: true\n            });\n            const channel = profile.items?.[0];\n            const serviceUserId = channel?.id || 'unknown';\n            const serviceUsername = channel?.snippet?.title || 'YouTube User';\n            // Save to database\n            await _lib_supabase_service__WEBPACK_IMPORTED_MODULE_0__.supabaseService.connectService({\n                user_id: userId,\n                service_id: 'youtube_music',\n                access_token: this.accessToken,\n                refresh_token: this.refreshToken,\n                expires_at: new Date(this.expiresAt).toISOString(),\n                is_active: true,\n                service_user_id: serviceUserId,\n                service_username: serviceUsername\n            });\n        } catch (error) {\n            console.error('Failed to handle YouTube callback:', error);\n            throw error;\n        }\n    }\n    // Search tracks (using YouTube Data API)\n    async searchTracks(query, limit = 20) {\n        try {\n            const response = await this.youtubeApi.search.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet'\n                ],\n                q: `${query} music`,\n                type: [\n                    'video'\n                ],\n                videoCategoryId: '10',\n                maxResults: limit,\n                order: 'relevance'\n            });\n            if (!response.data.items) return [];\n            // Get detailed video information\n            const videoIds = response.data.items.map((item)=>item.id.videoId);\n            const videoDetails = await this.getVideoDetails(videoIds);\n            return response.data.items.map((item, index)=>this.mapYouTubeTrack(item, videoDetails[index])).filter(Boolean);\n        } catch (error) {\n            console.error('Failed to search YouTube tracks:', error);\n            return [];\n        }\n    }\n    // Get video details\n    async getVideoDetails(videoIds) {\n        try {\n            const response = await this.youtubeApi.videos.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet',\n                    'contentDetails',\n                    'statistics'\n                ],\n                id: videoIds\n            });\n            return response.data.items || [];\n        } catch (error) {\n            console.error('Failed to get video details:', error);\n            return [];\n        }\n    }\n    // Get user's liked videos (requires OAuth)\n    async getLikedTracks(limit = 50, pageToken) {\n        try {\n            const response = await this.youtubeApi.videos.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet',\n                    'contentDetails',\n                    'statistics'\n                ],\n                myRating: 'like',\n                maxResults: limit,\n                pageToken\n            });\n            if (!response.data.items) return [];\n            return response.data.items.map((item)=>this.mapYouTubeTrack(item, item)).filter(Boolean);\n        } catch (error) {\n            console.error('Failed to get liked tracks:', error);\n            return [];\n        }\n    }\n    // Get user's playlists\n    async getUserPlaylists(limit = 50, pageToken) {\n        try {\n            const response = await this.youtubeApi.playlists.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet',\n                    'contentDetails'\n                ],\n                mine: true,\n                maxResults: limit,\n                pageToken\n            });\n            if (!response.data.items) return [];\n            return await Promise.all(response.data.items.map((playlist)=>this.mapYouTubePlaylist(playlist)));\n        } catch (error) {\n            console.error('Failed to get user playlists:', error);\n            return [];\n        }\n    }\n    // Get playlist tracks\n    async getPlaylistTracks(playlistId, limit = 50, pageToken) {\n        try {\n            const response = await this.youtubeApi.playlistItems.list({\n                auth: this.oauth2Client,\n                part: [\n                    'snippet'\n                ],\n                playlistId,\n                maxResults: limit,\n                pageToken\n            });\n            if (!response.data.items) return [];\n            const videoIds = response.data.items.map((item)=>item.snippet.resourceId.videoId);\n            const videoDetails = await this.getVideoDetails(videoIds);\n            return response.data.items.map((item, index)=>this.mapYouTubeTrack(item, videoDetails[index])).filter(Boolean);\n        } catch (error) {\n            console.error('Failed to get playlist tracks:', error);\n            return [];\n        }\n    }\n    // Map YouTube API response to our track format\n    mapYouTubeTrack(item, details) {\n        try {\n            const snippet = item.snippet || details?.snippet;\n            const statistics = details?.statistics || {};\n            const contentDetails = details?.contentDetails;\n            if (!snippet) return null;\n            // Parse duration (ISO 8601 format)\n            const duration = this.parseDuration(contentDetails?.duration || 'PT0S');\n            // Extract artist and title from video title\n            const { artist, title } = this.parseVideoTitle(snippet.title);\n            return {\n                id: `youtube_${item.id?.videoId || item.id}`,\n                title: title || snippet.title,\n                artist: artist || snippet.channelTitle,\n                album: undefined,\n                duration,\n                artwork: snippet.thumbnails?.high?.url || snippet.thumbnails?.medium?.url || '',\n                videoId: item.id?.videoId || item.id,\n                channelId: snippet.channelId,\n                channelTitle: snippet.channelTitle,\n                publishedAt: snippet.publishedAt,\n                viewCount: parseInt(statistics.viewCount || '0'),\n                likeCount: parseInt(statistics.likeCount || '0'),\n                description: snippet.description,\n                tags: snippet.tags || [],\n                serviceId: 'youtube_music',\n                originalId: item.id?.videoId || item.id,\n                availableServices: [\n                    'youtube_music'\n                ]\n            };\n        } catch (error) {\n            console.error('Failed to map YouTube track:', error);\n            return null;\n        }\n    }\n    // Map YouTube playlist\n    async mapYouTubePlaylist(playlist) {\n        const snippet = playlist.snippet;\n        return {\n            id: `youtube_${playlist.id}`,\n            title: snippet.title,\n            description: snippet.description,\n            creator: {\n                id: snippet.channelId,\n                name: snippet.channelTitle,\n                image: snippet.thumbnails?.high?.url\n            },\n            tracks: [],\n            artwork: snippet.thumbnails?.high?.url || snippet.thumbnails?.medium?.url || '',\n            isPublic: snippet.privacyStatus === 'public',\n            isLiked: false,\n            followers: 0,\n            createdAt: snippet.publishedAt,\n            updatedAt: snippet.publishedAt,\n            serviceId: 'youtube_music',\n            originalId: playlist.id,\n            availableServices: [\n                'youtube_music'\n            ]\n        };\n    }\n    // Parse ISO 8601 duration to seconds\n    parseDuration(duration) {\n        const match = duration.match(/PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/);\n        if (!match) return 0;\n        const hours = parseInt(match[1] || '0');\n        const minutes = parseInt(match[2] || '0');\n        const seconds = parseInt(match[3] || '0');\n        return hours * 3600 + minutes * 60 + seconds;\n    }\n    // Parse video title to extract artist and title\n    parseVideoTitle(title) {\n        // Common patterns: \"Artist - Title\", \"Artist: Title\", \"Artist | Title\"\n        const patterns = [\n            /^(.+?)\\s*[-–—]\\s*(.+)$/,\n            /^(.+?)\\s*:\\s*(.+)$/,\n            /^(.+?)\\s*\\|\\s*(.+)$/,\n            /^(.+?)\\s*•\\s*(.+)$/ // Artist • Title\n        ];\n        for (const pattern of patterns){\n            const match = title.match(pattern);\n            if (match) {\n                return {\n                    artist: match[1].trim(),\n                    title: match[2].trim()\n                };\n            }\n        }\n        // If no pattern matches, assume the whole title is the song title\n        return {\n            artist: '',\n            title: title.trim()\n        };\n    }\n    // Search using API key (for public searches without OAuth)\n    async searchTracksPublic(query, limit = 20) {\n        try {\n            const response = await this.youtubeApi.search.list({\n                key: process.env.YOUTUBE_API_KEY,\n                part: [\n                    'snippet'\n                ],\n                q: `${query} music`,\n                type: [\n                    'video'\n                ],\n                videoCategoryId: '10',\n                maxResults: limit,\n                order: 'relevance'\n            });\n            if (!response.data.items) return [];\n            // Get detailed video information\n            const videoIds = response.data.items.map((item)=>item.id.videoId);\n            const videoDetails = await this.getVideoDetailsPublic(videoIds);\n            return response.data.items.map((item, index)=>this.mapYouTubeTrack(item, videoDetails[index])).filter(Boolean);\n        } catch (error) {\n            console.error('Failed to search YouTube tracks (public):', error);\n            return [];\n        }\n    }\n    // Get video details using API key\n    async getVideoDetailsPublic(videoIds) {\n        try {\n            const response = await this.youtubeApi.videos.list({\n                key: process.env.YOUTUBE_API_KEY,\n                part: [\n                    'snippet',\n                    'contentDetails',\n                    'statistics'\n                ],\n                id: videoIds\n            });\n            return response.data.items || [];\n        } catch (error) {\n            console.error('Failed to get video details (public):', error);\n            return [];\n        }\n    }\n}\n// Export singleton instance\nconst youtubeMusicService = new YouTubeMusicService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/youtube-music-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase/client.ts":
/*!********************************!*\
  !*** ./lib/supabase/client.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\nfunction createClient() {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(\"https://nvwrmmuyzxanjvsadtfh.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52d3JtbXV5enhhbmp2c2FkdGZoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MjgzNjQsImV4cCI6MjA3MTMwNDM2NH0.8k1x6zfO0KO9ExeDKcPP4FbaCA-BezxJWGHnNJ0VhQU\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBRTVDLFNBQVNDO0lBQ2QsT0FBT0Qsa0VBQW1CQSxDQUN4QkUsMENBQW9DLEVBQ3BDQSxrTkFBeUM7QUFFN0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYXJyaWV5dS9EZXNrdG9wL3Nwb3RpZnkvbGliL3N1cGFiYXNlL2NsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCcm93c2VyQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3NzcidcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsaWVudCgpIHtcbiAgcmV0dXJuIGNyZWF0ZUJyb3dzZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSFcbiAgKVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUJyb3dzZXJDbGllbnQiLCJjcmVhdGVDbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase/service.ts":
/*!*********************************!*\
  !*** ./lib/supabase/service.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseService: () => (/* binding */ SupabaseService),\n/* harmony export */   supabaseService: () => (/* binding */ supabaseService)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"(rsc)/./lib/supabase/client.ts\");\n\nclass SupabaseService {\n    // =====================================================\n    // USER OPERATIONS\n    // =====================================================\n    async getCurrentUser() {\n        const { data: { user } } = await this.supabase.auth.getUser();\n        if (!user) return null;\n        const { data, error } = await this.supabase.from('users').select('*').eq('id', user.id).single();\n        if (error) throw error;\n        return data;\n    }\n    async createUser(userData) {\n        const { data, error } = await this.supabase.from('users').insert(userData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateUser(userId, updates) {\n        const { data, error } = await this.supabase.from('users').update(updates).eq('id', userId).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // ARTIST OPERATIONS\n    // =====================================================\n    async getArtists(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('artists').select('*').order('name').range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getArtist(id) {\n        const { data, error } = await this.supabase.from('artists').select('*').eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async searchArtists(query, limit = 20) {\n        const { data, error } = await this.supabase.from('artists').select('*').ilike('name', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    async createArtist(artistData) {\n        const { data, error } = await this.supabase.from('artists').insert(artistData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // ALBUM OPERATIONS\n    // =====================================================\n    async getAlbums(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*)\n      `).order('release_date', {\n            ascending: false\n        }).range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getAlbum(id) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*),\n        tracks:tracks(*)\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async getAlbumsByArtist(artistId) {\n        const { data, error } = await this.supabase.from('albums').select('*').eq('artist_id', artistId).order('release_date', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async searchAlbums(query, limit = 20) {\n        const { data, error } = await this.supabase.from('albums').select(`\n        *,\n        artist:artists(*)\n      `).ilike('title', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // TRACK OPERATIONS\n    // =====================================================\n    async getTracks(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*)\n      `).order('title').range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getTrack(id) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*),\n        track_services(*)\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async getTracksByAlbum(albumId) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*)\n      `).eq('album_id', albumId).order('track_number');\n        if (error) throw error;\n        return data;\n    }\n    async searchTracks(query, limit = 20) {\n        const { data, error } = await this.supabase.from('tracks').select(`\n        *,\n        artist:artists(*),\n        album:albums(*)\n      `).ilike('title', `%${query}%`).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    async createTrack(trackData) {\n        const { data, error } = await this.supabase.from('tracks').insert(trackData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getTrackServices(trackId) {\n        const { data, error } = await this.supabase.from('track_services').select('*').eq('track_id', trackId).eq('is_available', true);\n        if (error) throw error;\n        return data;\n    }\n    async addTrackService(trackServiceData) {\n        const { data, error } = await this.supabase.from('track_services').insert(trackServiceData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getBestStreamUrl(trackId, preferredQuality = 'high') {\n        const { data, error } = await this.supabase.from('track_services').select('stream_url, quality').eq('track_id', trackId).eq('is_available', true).order('quality', {\n            ascending: false\n        }).limit(1).single();\n        if (error) throw error;\n        return data?.stream_url || null;\n    }\n    // =====================================================\n    // PLAYLIST OPERATIONS\n    // =====================================================\n    async getPlaylists(limit = 50, offset = 0) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).eq('visibility', 'public').order('created_at', {\n            ascending: false\n        }).range(offset, offset + limit - 1);\n        if (error) throw error;\n        return data;\n    }\n    async getUserPlaylists(userId) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).eq('creator_id', userId).order('updated_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async getPlaylist(id) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*),\n        playlist_tracks(\n          position,\n          track:tracks(\n            *,\n            artist:artists(*),\n            album:albums(*)\n          )\n        )\n      `).eq('id', id).single();\n        if (error) throw error;\n        return data;\n    }\n    async createPlaylist(playlistData) {\n        const { data, error } = await this.supabase.from('playlists').insert(playlistData).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async addTrackToPlaylist(playlistId, trackId, position) {\n        // Get the next position if not provided\n        if (!position) {\n            const { data: maxPosition } = await this.supabase.from('playlist_tracks').select('position').eq('playlist_id', playlistId).order('position', {\n                ascending: false\n            }).limit(1).single();\n            position = (maxPosition?.position || 0) + 1;\n        }\n        const { error } = await this.supabase.from('playlist_tracks').insert({\n            playlist_id: playlistId,\n            track_id: trackId,\n            position,\n            added_by: (await this.getCurrentUser())?.id || null\n        });\n        if (error) throw error;\n    }\n    // =====================================================\n    // USER LIBRARY OPERATIONS\n    // =====================================================\n    async getUserLibrary(userId) {\n        const { data, error } = await this.supabase.from('user_library').select(`\n        *,\n        track:tracks(\n          *,\n          artist:artists(*),\n          album:albums(*)\n        ),\n        album:albums(\n          *,\n          artist:artists(*)\n        ),\n        artist:artists(*),\n        playlist:playlists(\n          *,\n          creator:users!creator_id(*)\n        )\n      `).eq('user_id', userId).order('added_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    async addToLibrary(libraryItem) {\n        const { data, error } = await this.supabase.from('user_library').insert(libraryItem).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async removeFromLibrary(userId, itemId, itemType) {\n        const { error } = await this.supabase.from('user_library').delete().eq('user_id', userId).eq(`${itemType}_id`, itemId);\n        if (error) throw error;\n    }\n    // =====================================================\n    // PLAY HISTORY OPERATIONS\n    // =====================================================\n    async addPlayHistory(historyItem) {\n        const { data, error } = await this.supabase.from('user_play_history').insert(historyItem).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getUserPlayHistory(userId, limit = 50) {\n        const { data, error } = await this.supabase.from('user_play_history').select(`\n        *,\n        track:tracks(\n          *,\n          artist:artists(*),\n          album:albums(*)\n        )\n      `).eq('user_id', userId).order('played_at', {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    // =====================================================\n    // SERVICE CONNECTION OPERATIONS\n    // =====================================================\n    async getUserServices(userId) {\n        const { data, error } = await this.supabase.from('user_services').select('*').eq('user_id', userId).eq('is_active', true);\n        if (error) throw error;\n        return data;\n    }\n    async connectService(serviceData) {\n        const { data, error } = await this.supabase.from('user_services').upsert(serviceData, {\n            onConflict: 'user_id,service_id'\n        }).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async disconnectService(userId, serviceId) {\n        const { error } = await this.supabase.from('user_services').update({\n            is_active: false\n        }).eq('user_id', userId).eq('service_id', serviceId);\n        if (error) throw error;\n    }\n    // =====================================================\n    // SEARCH OPERATIONS\n    // =====================================================\n    async searchAll(query, limit = 20) {\n        const [tracks, albums, artists, playlists] = await Promise.all([\n            this.searchTracks(query, limit),\n            this.searchAlbums(query, limit),\n            this.searchArtists(query, limit),\n            this.searchPlaylists(query, limit)\n        ]);\n        return {\n            tracks,\n            albums,\n            artists,\n            playlists,\n            query,\n            total: tracks.length + albums.length + artists.length + playlists.length\n        };\n    }\n    async searchPlaylists(query, limit = 20) {\n        const { data, error } = await this.supabase.from('playlists').select(`\n        *,\n        creator:users!creator_id(*)\n      `).ilike('title', `%${query}%`).eq('visibility', 'public').limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    constructor(){\n        this.supabase = (0,_client__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n    }\n}\n// Export a singleton instance\nconst supabaseService = new SupabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase/service.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fyoutube%2Froute&page=%2Fapi%2Fauth%2Fyoutube%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fyoutube%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fyoutube%2Froute&page=%2Fapi%2Fauth%2Fyoutube%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fyoutube%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_carrieyu_Desktop_spotify_app_api_auth_youtube_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/auth/youtube/route.ts */ \"(rsc)/./app/api/auth/youtube/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/youtube/route\",\n        pathname: \"/api/auth/youtube\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/youtube/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/carrieyu/Desktop/spotify/app/api/auth/youtube/route.ts\",\n    nextConfigOutput,\n    userland: _Users_carrieyu_Desktop_spotify_app_api_auth_youtube_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/auth/youtube/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fyoutube%2Froute&page=%2Fapi%2Fauth%2Fyoutube%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fyoutube%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/qs","vendor-chunks/object-inspect","vendor-chunks/get-intrinsic","vendor-chunks/side-channel-list","vendor-chunks/side-channel-weakmap","vendor-chunks/has-symbols","vendor-chunks/function-bind","vendor-chunks/side-channel-map","vendor-chunks/side-channel","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/call-bound","vendor-chunks/es-errors","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/es-object-atoms","vendor-chunks/googleapis","vendor-chunks/google-auth-library","vendor-chunks/googleapis-common","vendor-chunks/gaxios","vendor-chunks/jws","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/gtoken","vendor-chunks/url-template","vendor-chunks/safe-buffer","vendor-chunks/jwa","vendor-chunks/extend","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fyoutube%2Froute&page=%2Fapi%2Fauth%2Fyoutube%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fyoutube%2Froute.ts&appDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fcarrieyu%2FDesktop%2Fspotify&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();