// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/albums" | "/auth" | "/auth-test" | "/checkout" | "/checkout-test" | "/downloads" | "/library" | "/platforms" | "/platforms/connect" | "/playlists" | "/premium" | "/profile" | "/search" | "/spotify-test" | "/subscription" | "/upload" | "/youtube-test"
type AppRouteHandlerRoutes = "/api/auth/create-profile" | "/api/auth/debug" | "/api/auth/signup" | "/api/auth/spotify" | "/api/auth/spotify/callback" | "/api/auth/spotify/test" | "/api/auth/test-db" | "/api/auth/youtube" | "/api/health" | "/api/home-data" | "/api/music/search" | "/api/spotify/liked-tracks" | "/api/spotify/search" | "/api/stripe/create-checkout-session" | "/api/stripe/create-portal-session" | "/api/stripe/webhook" | "/api/supabase-test" | "/api/user/profile" | "/api/youtube/disconnect" | "/api/youtube/liked-tracks" | "/api/youtube/search" | "/api/youtube/status" | "/auth/spotify/callback" | "/auth/youtube/callback"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/albums": {}
  "/api/auth/create-profile": {}
  "/api/auth/debug": {}
  "/api/auth/signup": {}
  "/api/auth/spotify": {}
  "/api/auth/spotify/callback": {}
  "/api/auth/spotify/test": {}
  "/api/auth/test-db": {}
  "/api/auth/youtube": {}
  "/api/health": {}
  "/api/home-data": {}
  "/api/music/search": {}
  "/api/spotify/liked-tracks": {}
  "/api/spotify/search": {}
  "/api/stripe/create-checkout-session": {}
  "/api/stripe/create-portal-session": {}
  "/api/stripe/webhook": {}
  "/api/supabase-test": {}
  "/api/user/profile": {}
  "/api/youtube/disconnect": {}
  "/api/youtube/liked-tracks": {}
  "/api/youtube/search": {}
  "/api/youtube/status": {}
  "/auth": {}
  "/auth-test": {}
  "/auth/spotify/callback": {}
  "/auth/youtube/callback": {}
  "/checkout": {}
  "/checkout-test": {}
  "/downloads": {}
  "/library": {}
  "/platforms": {}
  "/platforms/connect": {}
  "/playlists": {}
  "/premium": {}
  "/profile": {}
  "/search": {}
  "/spotify-test": {}
  "/subscription": {}
  "/upload": {}
  "/youtube-test": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
