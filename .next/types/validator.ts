// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ../../app/(shell)/albums/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/albums/page.js")
  handler satisfies AppPageConfig<"/albums">
}

// Validate ../../app/(shell)/checkout-test/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/checkout-test/page.js")
  handler satisfies AppPageConfig<"/checkout-test">
}

// Validate ../../app/(shell)/checkout/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/checkout/page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ../../app/(shell)/downloads/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/downloads/page.js")
  handler satisfies AppPageConfig<"/downloads">
}

// Validate ../../app/(shell)/library/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/library/page.js")
  handler satisfies AppPageConfig<"/library">
}

// Validate ../../app/(shell)/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/(shell)/platforms/connect/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/platforms/connect/page.js")
  handler satisfies AppPageConfig<"/platforms/connect">
}

// Validate ../../app/(shell)/platforms/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/platforms/page.js")
  handler satisfies AppPageConfig<"/platforms">
}

// Validate ../../app/(shell)/playlists/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/playlists/page.js")
  handler satisfies AppPageConfig<"/playlists">
}

// Validate ../../app/(shell)/premium/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/premium/page.js")
  handler satisfies AppPageConfig<"/premium">
}

// Validate ../../app/(shell)/profile/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/profile/page.js")
  handler satisfies AppPageConfig<"/profile">
}

// Validate ../../app/(shell)/search/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/search/page.js")
  handler satisfies AppPageConfig<"/search">
}

// Validate ../../app/(shell)/subscription/page.tsx
{
  const handler = {} as typeof import("../../app/(shell)/subscription/page.js")
  handler satisfies AppPageConfig<"/subscription">
}

// Validate ../../app/auth-test/page.tsx
{
  const handler = {} as typeof import("../../app/auth-test/page.js")
  handler satisfies AppPageConfig<"/auth-test">
}

// Validate ../../app/auth/page.tsx
{
  const handler = {} as typeof import("../../app/auth/page.js")
  handler satisfies AppPageConfig<"/auth">
}

// Validate ../../app/search/page.tsx
{
  const handler = {} as typeof import("../../app/search/page.js")
  handler satisfies AppPageConfig<"/search">
}

// Validate ../../app/spotify-test/page.tsx
{
  const handler = {} as typeof import("../../app/spotify-test/page.js")
  handler satisfies AppPageConfig<"/spotify-test">
}

// Validate ../../app/upload/page.tsx
{
  const handler = {} as typeof import("../../app/upload/page.js")
  handler satisfies AppPageConfig<"/upload">
}

// Validate ../../app/youtube-test/page.tsx
{
  const handler = {} as typeof import("../../app/youtube-test/page.js")
  handler satisfies AppPageConfig<"/youtube-test">
}

// Validate ../../app/api/auth/create-profile/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/create-profile/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/create-profile">
}

// Validate ../../app/api/auth/debug/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/debug/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/debug">
}

// Validate ../../app/api/auth/signup/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/signup/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/signup">
}

// Validate ../../app/api/auth/spotify/callback/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/spotify/callback/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/spotify/callback">
}

// Validate ../../app/api/auth/spotify/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/spotify/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/spotify">
}

// Validate ../../app/api/auth/spotify/test/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/spotify/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/spotify/test">
}

// Validate ../../app/api/auth/test-db/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/test-db/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/test-db">
}

// Validate ../../app/api/auth/youtube/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/youtube/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/youtube">
}

// Validate ../../app/api/health/route.ts
{
  const handler = {} as typeof import("../../app/api/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/health">
}

// Validate ../../app/api/home-data/route.ts
{
  const handler = {} as typeof import("../../app/api/home-data/route.js")
  handler satisfies RouteHandlerConfig<"/api/home-data">
}

// Validate ../../app/api/music/search/route.ts
{
  const handler = {} as typeof import("../../app/api/music/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/music/search">
}

// Validate ../../app/api/spotify/liked-tracks/route.ts
{
  const handler = {} as typeof import("../../app/api/spotify/liked-tracks/route.js")
  handler satisfies RouteHandlerConfig<"/api/spotify/liked-tracks">
}

// Validate ../../app/api/spotify/search/route.ts
{
  const handler = {} as typeof import("../../app/api/spotify/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/spotify/search">
}

// Validate ../../app/api/stripe/create-checkout-session/route.ts
{
  const handler = {} as typeof import("../../app/api/stripe/create-checkout-session/route.js")
  handler satisfies RouteHandlerConfig<"/api/stripe/create-checkout-session">
}

// Validate ../../app/api/stripe/create-portal-session/route.ts
{
  const handler = {} as typeof import("../../app/api/stripe/create-portal-session/route.js")
  handler satisfies RouteHandlerConfig<"/api/stripe/create-portal-session">
}

// Validate ../../app/api/stripe/webhook/route.ts
{
  const handler = {} as typeof import("../../app/api/stripe/webhook/route.js")
  handler satisfies RouteHandlerConfig<"/api/stripe/webhook">
}

// Validate ../../app/api/supabase-test/route.ts
{
  const handler = {} as typeof import("../../app/api/supabase-test/route.js")
  handler satisfies RouteHandlerConfig<"/api/supabase-test">
}

// Validate ../../app/api/user/profile/route.ts
{
  const handler = {} as typeof import("../../app/api/user/profile/route.js")
  handler satisfies RouteHandlerConfig<"/api/user/profile">
}

// Validate ../../app/api/youtube/disconnect/route.ts
{
  const handler = {} as typeof import("../../app/api/youtube/disconnect/route.js")
  handler satisfies RouteHandlerConfig<"/api/youtube/disconnect">
}

// Validate ../../app/api/youtube/liked-tracks/route.ts
{
  const handler = {} as typeof import("../../app/api/youtube/liked-tracks/route.js")
  handler satisfies RouteHandlerConfig<"/api/youtube/liked-tracks">
}

// Validate ../../app/api/youtube/search/route.ts
{
  const handler = {} as typeof import("../../app/api/youtube/search/route.js")
  handler satisfies RouteHandlerConfig<"/api/youtube/search">
}

// Validate ../../app/api/youtube/status/route.ts
{
  const handler = {} as typeof import("../../app/api/youtube/status/route.js")
  handler satisfies RouteHandlerConfig<"/api/youtube/status">
}

// Validate ../../app/auth/spotify/callback/route.ts
{
  const handler = {} as typeof import("../../app/auth/spotify/callback/route.js")
  handler satisfies RouteHandlerConfig<"/auth/spotify/callback">
}

// Validate ../../app/auth/youtube/callback/route.ts
{
  const handler = {} as typeof import("../../app/auth/youtube/callback/route.js")
  handler satisfies RouteHandlerConfig<"/auth/youtube/callback">
}





// Validate ../../app/(shell)/layout.tsx
{
  const handler = {} as typeof import("../../app/(shell)/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
